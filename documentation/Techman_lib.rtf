{\rtf1\ansi\ansicpg1252\deff0\deflang1033\deflangfe1033{\fonttbl{\f0\fnil\fprq2\fcharset0 Bembo;}{\f1\froman\fprq2\fcharset0 Times New Roman;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fnil\fcharset0 Courier;}{\f4\fmodern\fprq1\fcharset0 Courier;}{\f5\fmodern\fprq1\fcharset0 Courier New;}{\f6\fnil\fprq2\fcharset2 Wingdings;}{\f7\froman\fprq2\fcharset2 Symbol;}{\f8\fswiss\fcharset0 Arial;}{\f9\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;}
{\stylesheet{ Normal;}{\s1 heading 1;}{\s2 heading 2;}{\s3 heading 3;}{\s4 heading 4;}{\s5 heading 5;}}
{\*\generator Msftedit 5.41.15.1507;}\viewkind4\uc1\pard\li709\qc\lang2057\b\f0\fs48\par
\par
\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \li709\qc\fs72 USEMARCON\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \li709\b0\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \li709\qc\fs48 User Controlled Generic MARC Converter\par
\pard\li709\qc\fs24\par
\par
\par
\fs40 Technical Manual\par
\fs24\par
\fs36\par
\par
\par
\par
\par
\pard\qc\lang1033\b\f1\fs24 USEMARCON - MARC record converter\par
Version 1.51\par
Adapted by Crossnet Systems Limited under contract to The British Library\par
Adapted by ATP Library Systems Ltd, Finland, 2002-2004\par
Adapted by Helsinki University Library, the National Library of Finland, 2004\par
Copyright 2000 - The British Library, The USEMARCON Consortium\par
\pard\li709\qc\lang2057\b0\f0\fs36\par
\par
\par
\par
\par
\par
\par
\par
January 2005\par
\pard\s1\sb240\cf1\b\caps\f2\fs28\page\lang1035\par
\pard\sb360\tqr\tx9027\cf0\fs24 Introduction\tab 4\par
\pard\sb360\tx480\tqr\tx9027 1.\tab SYSTEM FILES\tab 6\par
\pard\li240\sb240\tqr\tx9027\caps0\f1\fs20 Overview\tab 7\par
Conventional Abbreviations\tab 7\par
Initialization File (.ini)\tab 7\par
\pard\li480\tqr\tx9027\b0 Format\tab 8\par
\pard\li240\sb240\tqr\tx9027\b Look Up Table (.tbl)\tab 8\par
\pard\li480\tqr\tx9027\b0 Format\tab 9\par
\pard\li240\sb240\tqr\tx9027\b Format Checking Table (.chk)\tab 11\par
\pard\li480\tqr\tx9027\b0 Format\tab 11\par
\pard\li240\sb240\tqr\tx9027\b Character Set Translation Table (.trs)\tab 13\par
\pard\li480\tqr\tx9027\b0 Format\tab 14\par
\pard\li240\sb240\tqr\tx9027\b Configuration File (.cnf)\tab 15\par
\pard\li480\tqr\tx9027\b0 Format and Example\tab 15\par
\pard\li240\sb240\tqr\tx9027\b Rules Files (.rul)\tab 16\par
\pard\li480\tqr\tx9027\b0 Format\tab 16\par
\pard\sb360\tx480\tqr\tx9027\b\caps\f2\fs24 2.\tab RULES files\tab 18\par
\pard\li240\sb240\tqr\tx9027\caps0\f1\fs20 Overview\tab 19\par
Contents of a Bibliographic Record\tab 19\par
Content Designators\tab 20\par
\pard\li480\tqr\tx9027\b0 Link between Input CD(s) and Output CD(s)\tab 21\par
Occurrences\tab 22\par
Occurrences in CDIn and CDOut\tab 23\par
Rules File Structure\tab 25\par
\pard\li240\sb240\tqr\tx9027\b Rules\tab 27\par
\pard\li480\tqr\tx9027\b0 Basic Concept\tab 27\par
Variables\tab 28\par
\pard\li720\tqr\tx9027 CD variables\tab 28\par
Occurrence variables\tab 28\par
Literal values\tab 28\par
Date and Time variables\tab 29\par
\pard\li480\tqr\tx9027 Instructions\tab 29\par
\pard\li720\tqr\tx9027 Conditional instructions\tab 29\par
Boolean instructions\tab 30\par
Loop instruction\tab 32\par
Memory instructions\tab 33\par
Conversion instructions\tab 34\par
Translation instructions\tab 34\par
\pard\li240\sb240\tqr\tx9027\b Comments and Multi-line Rules\tab 37\par
\pard\sb360\tx480\tqr\tx9027\caps\f2\fs24 3.\tab ERROR MESSAGES\tab 38\par
\pard\li240\sb240\tqr\tx9027\caps0\f1\fs20 Format\tab 39\par
Error Definitions\tab 39\par
\pard\li480\tqr\tx9027\b0 Error Messages\tab 40\par
\pard\sb360\tx480\tqr\tx9027\b\caps\f2\fs24 4.\tab USING USEMARCON SOFTWARE IN YOUR APPLICATION\tab 46\par
\pard\sb360\tqr\tx9027 Appendix 1\tab 48\par
\pard\li240\sb240\tqr\tx9027\caps0\f1\fs20 UNIMARC to UKMARC Conversion Rules File\tab 48\par
\pard\sb360\tqr\tx9027\caps\f2\fs24 Appendix 2\tab 56\par
\pard\li240\sb240\tqr\tx9027\caps0\f1\fs20 UNIMARC to UKMARC Conversion Initialization File\tab 56\par
\pard\sb360\tqr\tx9027\caps\f2\fs24 Appendix 3\tab 58\par
\pard\li240\sb240\tqr\tx9027\caps0\f1\fs20 UNIMARC to UKMARC Conversion Look Up Tables\tab 58\par
\pard\sb360\tqr\tx9027\caps\f2\fs24 Appendix 4\tab 62\par
\pard\li240\sb240\tqr\tx9027\caps0\f1\fs20 UNIMARC to UKMARC Conversion Format Checking Tables\tab 62\par
\pard\sb360\tqr\tx9027\caps\f2\fs24 Appendix 5\tab 78\par
\pard\li240\sb240\tqr\tx9027\caps0\f1\fs20 UNIMARC to UKMARC Conversion Character Set Translation Tables\tab 78\par
\pard\sb360\tqr\tx9027\caps\f2\fs24 Appendix 6\tab 82\par
\pard\li240\sb240\tqr\tx9027\caps0\f1\fs20 UNIMARC to UKMARC Conversion Configuration Files\tab 82\par
\pard\cf1\lang2057\caps\f2\fs28\page\pard\s1\sb240 Introduction\par
\pard\li709\cf0\b0\caps0\f1\fs24\par
The aim of the USEMARCON Project is to develop a generic conversion program capable of translating bibliographic records created in any ISO 2709 compatible MARC format (e.g UKMARC) into any other ISO 2709 MARC format (e.g. InterMARC) using UNIMARC as a central switching format.\par
\par
The USEMARCON software is designed to provide users with two specific services. \par
\pard\fi-450\li720\qj\f2\fs20\par
\pard\li709\f1\fs24 1.\tab The facility to convert MARC records compliant with a specified input format into MARC records compliant with a specified output format.\par
\par
2.\tab The facility to create and modify rules files, used to achieve MARC conversions, in order to meet specific local requirements. The present software is designed to be used by senior cataloguers or others with a detailed knowledge of the structure of the MARC formats they wish to convert between.\par
\tab\par
Bibliographic data conversion requires the processing of:\par
\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-283\li1003 MARC bibliographic data, including related blocking and padding characters\par
{\pntext\f9\'B7\tab}Conversion rules for specifying the conversion of each data element of the input format into each data element of the output format\par
{\pntext\f9\'B7\tab}Coded data tables corresponding to sets of codes used by the format, e.g. language of publication, country of publication\par
{\pntext\f9\'B7\tab}Character set tables specifying the translation of individual character codes between input and output formats\par
{\pntext\f9\'B7\tab}Format checking tables specifying valid elements of input and output formats\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
{\pntext\f9\'B7\tab}The software makes use of files containing simple ASCII tables rather than compiled files to carry out conversions. These files may therefore be created or customised to ensure conversions accurately reflect local requirements. All the tables may be created or edited using a text editor such as MS DOS Edit or MS Windows Notepad. \par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}This USEMARCON Technical Manual gives details of the system files required by the software, what they must contain and how they must be created. Examples, in the form of the system files created for the UNIMARC to UKMARC Conversion, are given in the Appendices. \par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}The associated USEMARCON User Manual gives details of how to install the USEMARCON interface, how it functions and how conversions may be carried out.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s1\sb240\cf1\b\caps\f2\fs28 1.\tab SYSTEM FILES\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\cf0\lang1033\b0\caps0\f1\fs24\par
\pard\brdrb\brdrs\brdrw30\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b In this Chapter\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Overview\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li709\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Conventional Abbreviations\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Initialization File (.ini)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-360\li720\tab\b0 Format\b\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Look Up Tables (.tbl)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-360\li1080\tab\b0 Format\b\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Format Checking Tables (.chk)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-360\li1080\tab\b0 Format\b\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Character Set Translation Tables (.trs)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-360\li1080\tab\b0 Format\b\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Configuration Files (.cnf)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-360\li1080\tab\b0 Format and Example\b\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Rules Files (.rul)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-360\li720\b0\tab Format\b\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\sb120\lang2057\f2\fs28 Overview\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-851\li720\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1 This Chapter describes the precise file formats for each of the system file types except the rules file which is dealt with in \i Chapter 2.\i0\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}All the files are simple text files which may be created using a text editor such as MS Windows Notepad.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\sb120\b\f2\fs28 Conventional Abbreviations\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1\fs24\par
{\pntext\f9\'B7\tab}In the summary of the format the following conventional abbreviations will be used:\par
{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f3\fs20 Line\tab\tab is a special part describing the whole line of a file\i\par
\i0{\pntext\f9\'B7\tab}<name>\tab is a part of the description, which must be described \tab\tab somewhere else\i\par
\i0{\pntext\f9\'B7\tab}::=\tab\tab describes the left part with the right part\i\par
\i0{\pntext\f9\'B7\tab}\tab\tab (<name> ::= <part1><part2>)\i\par
\i0{\pntext\f9\'B7\tab}<p1><p2>\tab are two following parts of a description\i\par
\i0{\pntext\f9\'B7\tab}<p1>|<p2>\tab are two possible descriptions of a part\i\par
\i0{\pntext\f9\'B7\tab}[<p1>]\tab is an optional part\i\par
\i0{\pntext\f9\'B7\tab}<p1>+\tab\tab is a mandatory and repeatable part\i\par
\i0{\pntext\f9\'B7\tab}<p1>*\tab\tab is a repeatable but optional part\i\par
\i0{\pntext\f9\'B7\tab}(<p1><p2>)+\tab () groups parts to give them an occurrence \i\par
\i0{\pntext\f9\'B7\tab}'string'\tab is a literal character string\i\par
{\pntext\f9\'B7\tab}digit\tab\tab\i0 is a decimal digit between 0 and 9\i\par
{\pntext\f9\'B7\tab}hdigit\tab\i0 is an hexadecimal digit between 0 and F\i\par
{\pntext\f9\'B7\tab}number\i0\tab is a number\i\par
{\pntext\f9\'B7\tab}byte\tab\tab\i0 is a number between 0 and 255\i\par
{\pntext\f9\'B7\tab}char\tab\tab\i0 is a character other than a digit\i\par
{\pntext\f9\'B7\tab}string\i0\tab is a character string\i\par
{\pntext\f9\'B7\tab}words\i0\tab\tab is a set of character strings\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\sb120\b\f2\fs28 Initialization File (.ini)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1\fs24\par
{\pntext\f9\'B7\tab}The USEMARCON program uses a file to store a default set of system files and parameters to enable the user environment and system information to remain uniform between sessions. This file is used in MS Windows and Unix versions of USEMARCON. For example, the initialization file is used in the command line launching USEMARCON for a UK to UNIMARC conversion in the following way:\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}C:\\usem\\usemarcon.exe c:\\usem\\uk2uni.ini\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}The values contained in the .ini file may be modified using any text editor (such as Notepad in Windows). Please note that in some operating systems file names are case sensitive. Always use the correct case to ensure maximum compatibility between platforms.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\keepn\s3\sb240\sa60\b\f2 Format\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1\par
{\pntext\f9\'B7\tab}The file has a typical MS Windows structure:\par
{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f3\fs20 [section] \i\par
\i0{\pntext\f9\'B7\tab}entry=string \i\par
\i0{\pntext\f9\'B7\tab}      . \i\par
\i0{\pntext\f9\'B7\tab}      . \i\par
\i0{\pntext\f9\'B7\tab}      .\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i\f1\fs24\par
{\pntext\f9\'B7\tab}Example:\par
\i0{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709 [\f3\fs20 DEFAULT_FILES]\par
{\pntext\f9\'B7\tab}ErrorLogFile= errlog.txt\par
{\pntext\f9\'B7\tab}RuleFile= uni2uk.rul\par
{\pntext\f9\'B7\tab}TranscodingCharacterTable= iso2blec.trs\par
{\pntext\f9\'B7\tab}InputFormatCheckingTable= uni.chk\par
{\pntext\f9\'B7\tab}OutputFormatCheckingTable= uk.chk\par
{\pntext\f9\'B7\tab}MarcInputFile= UNI.MRC\par
{\pntext\f9\'B7\tab}MarcOutputFile= uk.mrc\par
{\pntext\f9\'B7\tab}InputMarcEditConfigurationFile= uni.cnf\par
{\pntext\f9\'B7\tab}OutputMarcEditConfigurationFile= uk.cnf\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}[DEFAULT_MARC_ATTRIBUTES]\par
{\pntext\f9\'B7\tab}IsInputBlockSegmentedChecked=\par
{\pntext\f9\'B7\tab}IsInputLastBlockPaddedChecked=\par
{\pntext\f9\'B7\tab}InputMarcSizeBlock=2048\par
{\pntext\f9\'B7\tab}InputMarcMinDataFree=5\par
{\pntext\f9\'B7\tab}InputMarcPaddingChar=5E\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}IsOutputBlockSegmentedChecked=FALSE\par
{\pntext\f9\'B7\tab}IsOutputLastBlockPaddedChecked=FALSE\par
{\pntext\f9\'B7\tab}OutputMarcSizeBlock=2048\par
{\pntext\f9\'B7\tab}OutputMarcMinDataFree=5\par
{\pntext\f9\'B7\tab}OutputMarcPaddingChar=5E\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}[DEFAULT_VALUES]\par
{\pntext\f9\'B7\tab}MaxErrorsToBeEncoutered=19999\par
{\pntext\f9\'B7\tab}OrdinalNumber=599\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}[DEFAULT_STATES]\par
{\pntext\f9\'B7\tab}IsInteractiveExecutionModeChecked=TRUE\par
{\pntext\f9\'B7\tab}IsVerboseExecutionModeChecked=\par
{\pntext\f9\'B7\tab}IsShowCommandsActivated=\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}[DEBUG]\par
{\pntext\f9\'B7\tab}IsDebugExecutionModeChecked=FALSE\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
\i{\pntext\f9\'B7\tab}NB:\i0  Beginning with version 1.3 it is no longer necessary or encouraged to include full paths in the file names.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\fi-720\li720\sb120\b\f2\fs28 Look Up Table (.tbl)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1\fs24\par
{\pntext\f9\'B7\tab}Look Up Tables (.tbl) are used to hold large amounts of tabular information (e.g. ISO Standard country codes) which are required by a conversion rules file. Data is held separately in a table to allow easier maintenance of the main rules file. A rule can therefore be written which will \lquote call\rquote  the table rather than actually containing the information in the table.\par
{\pntext\f9\'B7\tab}\par
\i{\pntext\f9\'B7\tab}Example:\par
\i0{\pntext\f9\'B7\tab}\par
\f4\fs20{\pntext\f9\'B7\tab}008/16-17/\tab | 102$b\tab | Table ('Region.tbl')\par
\f1\fs24{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Unlike other conversion files Look Up Tables are commonly named to reflect their function e.g. ill.tbl for a table of illustration codes.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Each Look Up table used in a Rules file is defined in a separate file. Each file bears the name of the table used in the Rules file.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}See \i Appendix 3\i0  for the complete set of UNIMARC to UKMARC Conversion Look Up Tables.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\keepn\s3\sb240\sa60\b\f2 Format\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\par
\b0{\pntext\f9\'B7\tab}The first and second lines of the file may contain comments such as the name of the file, or a description of its function. The table itself \ul must\ulnone  start on the third line of the file.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Each line of the table can be either:\par
\i{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-283\li992\i0 An #include line. This enables the loading of another table of coded data as part of the current file.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-283\li992\i0 A translation line. This contains the characters in the input record and the characters to which they are to be translated in the output record, separated by a pipe character.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
{\pntext\f9\'B7\tab}The format of the translation line is as follows:\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Character (or sequence of characters), space or tab, pipe character (|), space or tab, character (or sequence of characters).\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}i.e.\tab\f4\fs20 <characters in>\tab |\tab <characters out>\par
\i\f1\fs24{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Example:\i0\par
{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f5\fs20 pubcode.tbl\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}s | d\par
\lang1031{\pntext\f9\'B7\tab}r | e\par
{\pntext\f9\'B7\tab}m | a\par
{\pntext\f9\'B7\tab}z | e\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
\lang2057{\pntext\f9\'B7\tab}Optionally, a comment may be added to the end of the line, which must be preceded by two solidi (//).\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}i.e.\tab\f4\fs20 <characters in>\tab |\tab <characters out>//<comment>\f1\fs24\par
{\pntext\f9\'B7\tab}\par
\i{\pntext\f9\'B7\tab}Example:\par
\f5\fs20{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i0\f4 Genre litt\'e9raire Interuni\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}0 | a\tab //Fiction adulte\par
{\pntext\f9\'B7\tab}1 | a\tab //fiction adolescent\par
{\pntext\f9\'B7\tab}2 | a\tab //fiction enfants\par
{\pntext\f9\'B7\tab}3 | y\tab //document p\'e9dagogique enseignement sup\'e9rieur\par
{\pntext\f9\'B7\tab}4 | y\tab //document p\'e9dagogique enseignement primaire\par
{\pntext\f9\'B7\tab}...\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
{\pntext\f9\'B7\tab}Each character can be described as its ASCII representation, as its hexadecimal value (preceded by 0x), or its decimal value.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Numbers must be described by their decimal or hexadecimal value e.g. 0x31 for 1, because 1 does not mean \lquote 1\rquote  but the character whose ASCII value is decimal 1.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}When typing words in a Look Up Table, each character of each word must be separated by a space. A set of words, normally separated by a blank character should be shown as separate words by the hexadecimal of the blank character i.e. 0x20.\par
{\pntext\f9\'B7\tab}\par
\i{\pntext\f9\'B7\tab}Example:\par
{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i0\f5\fs20 538.tbl\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}0x30\tab |\tab I s s u e 0x20 n o . // 30 is the hex for \lquote 0\rquote , 20 is the hex for \lquote space\rquote\par
{\pntext\f9\'B7\tab}0x31\tab |\tab M a t r i x 0x20 n o .\par
{\pntext\f9\'B7\tab}0x32\tab |\tab P l . 0x20 n o .\par
{\pntext\f9\'B7\tab}0x33\tab |\tab P u b l i s h e r \rquote  s 0x20 n o .\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
{\pntext\f9\'B7\tab}Each character or sequence to be translated will either match or not match one character or sequence of the first column of the table. The translation software searches for the longest matching sequence. In order to prevent ambiguity with shorter sequences, the longest one will be chosen.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}If a character or sequence in the input record matches a character or sequence in the first column of the table, it will be replaced in the output record by the character or sequence in the second column of the table.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}A default may also be set to take care of cases where no sequence in the input record matches a sequence in the input column.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\qj\par
{\pntext\f9\'B7\tab}The #DEFAULT entry must be entered in the form:\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}#DEFAULT, space or tab, pipe, space or tab, character (or sequence of characters)\par
\f4\fs20{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24 i.e.\f4\fs20\tab #DEFAULT\tab |\tab <characters out>\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\qj\i\f1\fs24\par
{\pntext\f9\'B7\tab}Example:\par
\i0{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\qj\f4\fs20 aud.tbl\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}a | j\par
{\pntext\f9\'B7\tab}b | j\par
{\pntext\f9\'B7\tab}c | j\par
{\pntext\f9\'B7\tab}d | j\par
{\pntext\f9\'B7\tab}#DEFAULT | 0X20\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\qj\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709 In the example above, if the input record does not contain a, b, c or d then the blank, represented by the hex code 20, will be inserted in the appropriate position in the output record.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\qj\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709 If no sequence in the first column matches and a #DEFAULT entry does not exist, the input sequence of word(s) will be suppressed in the output and an error message will be logged in the report file.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\i Summary:\par
\i0{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\f3\fs20 Line ::= <include line> | <translation line>\i\par
\i0{\pntext\f9\'B7\tab}<include line> ::= '#include \b  \b0 '\i string'\b\i0  \b0 '\i\par
\i0{\pntext\f9\'B7\tab}<translation line> ::= <words in> '|' <words> [// \i words\i0 ]\i\par
\i0{\pntext\f9\'B7\tab}<words in> ::= <word>+ | #DEFAULT\i\par
\i0{\pntext\f9\'B7\tab}<words> ::= <word>+\i\par
\i0{\pntext\f9\'B7\tab}<word> ::=  (<character> \lquote\strike b\strike0\rquote )*\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\lang2057\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\fi-720\li720\sb120\b\f2\fs28 Format Checking Table (.chk)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\qj\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1 A MARC Format Checking Table (.chk) describes the valid features of a particular MARC format. The table lists all the fields and subfields allowed in records, their occurrences and the ordinal number of fixed length fields or subfields.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}For each MARC format conversion two tables are required: the first to check input records (with a particular format) and the second to check output records\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Use of these tables allows the input and output data to be checked for compliance with the specified format.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}The UNIMARC to UKMARC Format Checking Tables can be found in \i Appendix 4\i0 .\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\keepn\s3\sb240\sa60\b\f2 Format\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1\par
{\pntext\f9\'B7\tab}A Format Checking Table is a simple text file. The first line may contain a comment such as the name of the format.\par
{\pntext\f9\'B7\tab}Each following line can be either:\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-283\li992 An #include line. This enables the loading of another checking table as part of the current file.\par
{\pntext\f9\'B7\tab}A description line. This describes a field, its occurrence, its indicators and its subfields. \par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
{\pntext\f9\'B7\tab}Each line must have the following structure :\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134 1.\tab A field tag e.g. 245\par
{\pntext\f9\'B7\tab}2.\tab A character from the following list:\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li1134\tx1134\tab _\tab means that the field is mandatory, not repeatable,\par
{\pntext\f9\'B7\tab}\tab +\tab means that the field is mandatory and repeatable,\par
{\pntext\f9\'B7\tab}\tab ?\tab means that the field is neither mandatory nor repeatable,\par
{\pntext\f9\'B7\tab}\tab *\tab means that the field is not mandatory but can be repeatable.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134 3.\tab Space or tab, pipe character (|), space or tab.\par
{\pntext\f9\'B7\tab}4.\tab I1= \par
{\pntext\f9\'B7\tab}\tab This should be followed by a list of valid values for the first indicator. Blank \tab should be represented by _. The fill character (|) is represented by a space then the \tab hex value e.g. 0x7C\par
{\pntext\f9\'B7\tab}5.\tab Space or tab, pipe character (|), space or tab.\par
{\pntext\f9\'B7\tab}6.\tab I2= \par
{\pntext\f9\'B7\tab}\tab This should be followed by a list of valid values for the second indicator. Blank \tab should be represented by _. The fill character (|) is represented by a space then the \tab hex value e.g. 0x7C\par
{\pntext\f9\'B7\tab}7.\tab Space or tab, pipe character (|), space or tab.\par
{\pntext\f9\'B7\tab}8.\tab A list of the subfield delimiters allowable for the tag.\par
{\pntext\f9\'B7\tab}\tab The delimiters are introduced by a control character, usually represented by $. \tab This is followed by a letter or digit identifying the subfield e.g. $a.\par
{\pntext\f9\'B7\tab}\tab The delimiter is then followed by a character from the list at 2 above, to indicate \tab its repeatability, etc.\par
{\pntext\f9\'B7\tab}\tab The delimiters must be separated from each other by space or tab, pipe character \tab (|), space or tab.\par
{\pntext\f9\'B7\tab}9.\tab An optional text comment preceded by two solidi (//). This may also be inserted \tab above the field tag.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
{\pntext\f9\'B7\tab}This file enables the verification of the occurrence of fields or subfields, but does not verify that a particular field or subfield may only be repeated a particular number of times e.g. twice. This file only verifies fixed structures and if the occurrence of a field/subfield is linked to particular Indicator values these cannot be checked.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Each field found in a record is compared with this table, if an error is detected, it will be logged in the Error Log File (see Chapter 3).\par
\i{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Example:\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\i0\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\f3\fs20 UNIMARC format\i\par
\i0{\pntext\f9\'B7\tab}\'85\i\par
\i0{\pntext\f9\'B7\tab}#include \b  \b0 deb_uni.fmt\b  \b0\i\par
\i0{\pntext\f9\'B7\tab}\'85\par
{\pntext\f9\'B7\tab}001_\tab |\tab I1=\tab |\tab I2=\tab |\par
\i{\pntext\f9\'B7\tab}\par
\i0{\pntext\f9\'B7\tab}100_\tab |  I1=_    |  I2=_     |  \expndtw-20 $a_\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}101_\tab |  I1=012 0X7C  |  I2=_ |$a*  |  $b*  |  $c*  |  $d*  |  $e*  | $f*  |  $h*  |  $i*  |  $g?  // Mandatory, not repeatable. I1 can be fill character. $g optional not repeatable, rest optional & repeatable\par
\expndtw0{\pntext\f9\'B7\tab}\'85\i\par
\i0{\pntext\f9\'B7\tab}200_\tab |  I1=01  |  I2=_     |  $a+ | $b* | $c* \'85  \tab\tab\tab\tab // Title\i\par
\i0{\pntext\f9\'B7\tab}700*\tab |  I1=_    |  I2=012 |  $a_ | $b? | $c? | $d? | $f? \'85\tab\tab\tab // Author\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\lang2057\f1\fs24\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\i Summary:\par
\i0{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\f3\fs20 Line ::= <include line> | <checking line>\i\par
\i0{\pntext\f9\'B7\tab}<include line> ::= '#include \b  \b0 '\i string'\b\i0  \b0 '\i\par
\i0{\pntext\f9\'B7\tab}<checking line> ::= <field tag> '|' <I1> '|' <I2> '|' <subfields> [// \i words\i0 ]\i\par
\i0{\pntext\f9\'B7\tab}<field tag> ::= <tag><occurrence>\i\par
\i0{\pntext\f9\'B7\tab}<tag> ::= \i number\par
\i0{\pntext\f9\'B7\tab}<occurrence> ::= _|+|?|*\i\par
\i0{\pntext\f9\'B7\tab}<I1> ::= 'I1='<indicator value>*\i\par
\i0{\pntext\f9\'B7\tab}<I2> ::= 'I2='<indicator value>*\i\par
\i0{\pntext\f9\'B7\tab}<indicator value> ::=_|\i digit\par
\i0{\pntext\f9\'B7\tab}<subfields> ::= <subfield>['|'<subfields>]\i\par
\i0{\pntext\f9\'B7\tab}<subfield> ::=<subfield tag><occurrence>\i\par
\i0{\pntext\f9\'B7\tab}<subfield tag> ::= '$'\i char\i0 |\i digit\i0\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\lang2057\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\fi-720\li720\sb120\b\f2\fs28 Character Set Translation Table (.trs)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\b0\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\lang2057 Different MARC formats often require the use of different character sets. The USEMARCON system therefore incorporates the ability to convert between different specified character sets. This process is handled by the use of Character Set Translation Tables (.trs) which map individual input to output characters. The character set table need only deal with non-standard characters as conventional ASCII characters (e.g A-Z, a-z, 1-9 etc.) are specified in a default character set table (standard.trs).\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\par
{\pntext\f9\'B7\tab}The UNIMARC to UKMARC Conversion Character Set Translation Tables can be found in \i Appendix 5\i0 .\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\keepn\s3\sb240\sa60\lang2057\b\f2 Format\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1\par
{\pntext\f9\'B7\tab}The first and second lines of the file may contain comments such as the name of the file, or a description of its function. The table itself \ul must\ulnone  start on the third line of the file.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Each line of the table can be either:\par
\i{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-283\li992\i0 An #include line. This enables the loading of another table of coded data as part of the current file.\par
{\pntext\f9\'B7\tab}A translation line. This contains the characters in the input record and the characters to which they are to be translated in the output record, separated by a pipe character.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
{\pntext\f9\'B7\tab}The format of the translation line is as follows:\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Character (or sequence of characters), space or tab, pipe character (|), space or tab, character (or sequence of characters). Optionally, a comment may be added to the end of the line , which must be preceded by two solidi (//).\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}i.e.\tab\f4\fs20 <characters in>\tab |\tab <characters out>//<comment>\f1\fs24\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Each character can be described as its ASCII representation, as its hexadecimal value (preceded by 0x), or its decimal value.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Numbers must be described by their decimal or hexadecimal value (0x31 for 1), because 1 does not mean \lquote 1\rquote  but the character whose ASCII value is 1.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Each character or sequence to be translated will either match or not match one character or sequence of the first column of the table. The translation software searches for the longest matching sequence. In order to prevent ambiguity with shorter sequences, the longest one will be chosen (see example below).\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\qj\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709 If a character or sequence in the input record matches a character or sequence in the first column of the table, it will be replaced in the output record by the character or sequence in the second column of the table.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\qj\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709 If no character or sequence in the input record matches a character or sequence in the first column, then the current intput character is written in the output record.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\qj\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i Example:\par
\i0{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\f3\fs20 iso5426\i\par
\i0{\pntext\f9\'B7\tab}ASCII \i\par
\i0{\pntext\f9\'B7\tab}#include \b  \b0 basic.trf\b  \b0\i\par
\i0{\pntext\f9\'B7\tab}0xA3\tab\tab |\tab 0x9C\tab // Pound character - simple translation\i\par
\i0{\pntext\f9\'B7\tab}0xCA\tab\tab |\tab 0xF8\tab // Degree - if 0xCA appears before an A see below\i\par
\i0{\pntext\f9\'B7\tab}0xCA A\tab |\tab 0x8F\tab // A with circle above\i\par
\i0{\pntext\f9\'B7\tab}0xBF\tab\tab |\tab\tab // The inverted question mark is not \tab\tab\tab\tab\tab // translated.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
\i{\pntext\f9\'B7\tab}Summary:\par
\i0{\pntext\f9\'B7\tab}\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\f3\fs20 Line ::= <include line> | <translation line>\i\par
\i0{\pntext\f9\'B7\tab}<include line> ::= '#include \b  \b0 '\i string'\b\i0  \b0 '\i\par
\i0{\pntext\f9\'B7\tab}<translation line> ::= <chars> '|' <chars> [// \i words \i0 ]\i\par
\i0{\pntext\f9\'B7\tab}<chars> ::= <char>+\i\par
\i0{\pntext\f9\'B7\tab}<char> ::= <hexa>|<deci>|\i  char\par
\i0{\pntext\f9\'B7\tab}<hexa> ::= 0x\i hdigit hdigit\par
\i0{\pntext\f9\'B7\tab}<deci> ::= \i byte\i0\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\fi-720\li720\sb120\b\f2\fs28 Configuration File (.cnf)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1\fs24\par
{\pntext\f9\'B7\tab}This file describes fields that have no indicator in the corresponding MARC file. There is one configuration file for the Input MARC file and one for the Output MARC file.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}A wildcard character (?) can be used to replace one character. For Example 00? means any field with a tag beginning with 00.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\par
{\pntext\f9\'B7\tab}See \i Appendix 6\i0  for the UNIMARC to UKMARC Conversion Configuration Files.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\keepn\s3\sb240\sa60\lang2057\b\f2 Format and Example\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\b0\f1\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\f3\fs20 00?\par
{\pntext\f9\'B7\tab}010\par
{\pntext\f9\'B7\tab}998\par
{\pntext\f9\'B7\tab}999\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\lang2057\f1\fs24\par
{\pntext\f9\'B7\tab}If no configuration file is provided, a MARC field is treated as having no indicators if a subfield delimiter ($) is found within the first two positions of the field contents. If the tag is of the format 00X i.e. is a control field, and no subfield delimiter appears in the field contents, it is treated as having no indicator. If the tag is of the 00X format but a subfield delimiter is found after the first two positions of the field contents, the first two positions are treated as being indicators. Every field which begins with anything other than 00X and which does not have $ in the first two positions of the field contents, are treated as having indicators.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\fi-720\li720\sb120\b\f2\fs28 Rules Files (.rul)\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1\fs24\par
{\pntext\f9\'B7\tab}The rules governing a specific MARC conversion are held in a single rules file (.rul). The rules file describes precisely how the fields and subfields of the input MARC records should be converted into their counterparts in the output MARC format. This is achieved through the manipulation of input and output Content Designators (CDs), specific to each format, using a sophisticated rule syntax. The language used to create rules includes six main types of instruction:\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\li709\qj conditional\par
{\pntext\f9\'B7\tab}boolean\par
{\pntext\f9\'B7\tab}loop\par
{\pntext\f9\'B7\tab}memory\par
{\pntext\f9\'B7\tab}conversion\par
{\pntext\f9\'B7\tab}translation\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\keepn\s3\sb240\sa60\b\f2 Format\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1\par
{\pntext\f9\'B7\tab}The first and second lines of the file may contain comments such as the name of the file, or a descriptionof its function. The table itself \ul must\ulnone  start on the third line of the file.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Each line of the table can be either:\par
\i{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-283\li992\i0 An #include line. This enables the loading of another table of coded data as part of the current file.\par
{\pntext\f9\'B7\tab}A translation line. This contains the characters in the input record and the characters to which they are to be translated in the output record, separated by a pipe character.\par
\pard\li709\par
The format of the translation line is as follows:\par
\par
\pard{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent360\pnstart1\pndec{\pntxta.}}
\fi-360\li1080\sa120 A source CD description.\i\par
\i0{\pntext\f1 2.\tab}Space or tab, pipe character (|), space or tab.\i\par
\i0{\pntext\f1 3.\tab}A destination CD description.\i\par
\i0{\pntext\f1 4.\tab}Space or tab, pipe character (|), space or tab.\i\par
\i0{\pntext\f1 5.\tab}The description of the rule which will enable the conversion of the source CD(s) into the destination CD\i\par
\i0{\pntext\f1 6.\tab}An optional text comment preceded by two solidi (//)\par
\pard\li709\par
(See \lquote Content Designators\rquote  in \i Chapter 2\i0  for the definition of a CD)\par
\i\page Example:\par
\i0\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \li709 ...\par
\f4\fs20 245    | 200I2              | ' '\par
245I1  | 200I1              | If (n=1 Or n=3) Then 1 Else 0\par
245$a  | 200$a              | If (I2 = '0') Then S\par
245$a  | 200$a              | If (I2 != '0') Then Sto(0);\par
                              Between(1,Val(I2), Strict); Sto(1);\par
                              Mem(0); From(Val(I2)); Sto(2);\par
                                 '\\88'+Mem(1)+'\\89'+Mem(2)\par
245$b  | 200$e              | \par
245$e  | 200$f              | If (n=1) Then S\par
245$e  | 200$g              | If (n>1) Then S\par
245    | 200                | Sort ('abefg')\par
\f1\fs24 ...\par
\pard\li709\par
\i Summary:\par
\i0\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \li709\f4\fs20 Line ::= <include line> | <translation line>\par
<include line> ::= '#include  'string' '\par
<translation line> ::= <source CD> '|' <destination CD> '|' <rule> [// words ]\par
<source CD> ::=  \i described in Chapter 2\i0\par
<destination CD> ::=  \i described in Chapter 2\i0\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \li709\qj <rule> ::= \i  described in Chapter 2\par
\pard\s1\sb240\b\i0\caps\f2\fs28\page 2.\tab RULES files\par
\pard\fi-851\li720\qc\caps0\par
\pard\brdrb\brdrs\brdrw30\brsp20 \li709\lang1033\f1\fs24 In this Chapter\par
\pard\li720\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Overview\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li709\tab\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Contents of a Bibliographic Record\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li709\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Content Designators\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\tx1134\tab\b0 Link between Input CD(s) and Output CD(s)\par
{\pntext\f9\'B7\tab}\tab Occurrences\par
{\pntext\f9\'B7\tab}\tab Occurrences in CDIn and CDOut\par
{\pntext\f9\'B7\tab}\tab Rules File Structure\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-360\li720\b\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709 Rules\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\tx1134\tab\par
{\pntext\f9\'B7\tab}\tab\b0 Basic Concept\b\par
{\pntext\f9\'B7\tab}\tab\b0 Variables \par
{\pntext\f9\'B7\tab}\tab Instructions\par
{\pntext\f9\'B7\tab}\tab Comments and Multi-line rules\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\sb120\lang2057\b\f2\fs28 Overview\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1 The aim of USEMARCON is to translate bibliographic records created in any ISO 2709 compatible MARC format (e.g. UKMARC) into any other ISO 2709 MARC format (e.g. InterMARC) using UNIMARC as a central switching format.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}In order to convert records from one format to another the software must be given instructions on what to do with each part of each field and subfield of the input record, in order to create the output record.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}These instructions are written in a rules file. There is no generic rules file. The instructions written in a rules file are specific to the format of the records in the database to be converted, and the required format of the converted records in the database.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}A rules file is a text file which can be created in any text editor such as MS Windows Notepad. \par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}This chapter gives the details of how rules files must be created. The UNIMARC to UKMARC Rules File can be found in \i Appendix 1\i0 .\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\sb120\b\f2\fs28 Contents of a Bibliographic Record\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1\fs24\par
{\pntext\f9\'B7\tab}A bibliographic record contains :\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120 A \b record label\b0  (or Leader) containing fixed position information. For convenience this is treated as an ordinary field with the arbitrary field tag 000. (In MARC records conforming to ISO 2709, the record label has no tag, indicators or subfields.)\par
{\pntext\f9\'B7\tab}A set of \b fields\b0  each of which is identified by an \i aaa\i0  tag (where \i a\i0  is either a numeric or an uppercase letter).\par
\pard\li709 A bibliographic record can therefore be considered as a set of fields from 000 to ZZZ. Fields may be either repeatable or not and they may also be mandatory or not.\par
\par
In addition, fields may be divided into \b control fields\b0  (tags numbered 000-009) and \b data fields\b0  (tags numbered 010-ZZZ). Control fields contain no indicators and no subfields.\par
\par
Each data field contains:\par
\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120 A set of indicators each of one character or one digit. Most formats have two. Throughout each indicator is treated as a particular subfield named I1 or I2.\par
{\pntext\f9\'B7\tab}A set of subfields: each subfield begins with a control character followed by a character or digit indicating the \lquote name\rquote  of the subfield e.g. $a. Subfields may be repeatable or not and they may also be mandatory or not.\par
\pard\li709 A data field can be therefore be treated as a set of subfields like I1, I2 or $\i x \i0 (where \i x\i0  is a digit or a letter).\par
\par
Each field or subfield can be either:\par
\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120 A 'normal' field or subfield, containing text.\par
{\pntext\f9\'B7\tab}A 'fixed position' field or subfield. When constructing rules, character positions within a \lquote fixed position\rquote  field or subfield must be numbered from 1 and not from 0 as in some formats. For example, the \lquote Date entered on file\rquote  in UNIMARC 100$a is described as 100$a/1-8/ not 100$a/0-7/ as it is in the \i UNIMARC Manual.\i0\par
\pard\li709\par
\pard\s2\sb120\b\f2\fs28 Content Designators\par
\pard\li709\b0\f1\fs24\par
To create a rule which will convert a particular part of a record, you must describe in which Tag, and in which occurrence of that Tag the part is. \par
\par
If you do not wish to access a complete Tag, you must describe which subfield and which occurrence of that subfield you want to access.\par
\par
If the (sub)field is a fixed position subfield, you must describe which position of that (sub)field you wish to access.\par
\par
The description above, enables access to one particular part of a record. The description of this particular part will be named the \b Content Designator(CD)\b0 . The CDIn is the Content Designator for the input file and the CDOut is the Content Designator for the output file.\par
\par
The structure of a rules file line follows the pattern:\par
\par
CDIn | CDOut | conversion rule\par
\par
The three elements are separated by a pipe (|).\par
\par
In a rules file, a CD may be defined as follows:\par
\par
\pard\li709\tx1985\b\f2\fs20\tab [@][TTT[(\i n\sub 1\nosupersub\i0 )]] [SS[(\i n\sub 2\nosupersub\i0 )]] [/\i n\sub 3\nosupersub\i0 [-\i n\sub 4\nosupersub\i0 ]/]\b0\par
\pard\li709\f1\fs24\par
\pard\fi-1276\li1985\b\f2\fs20 @\b0\f1  \fs24\tab Is only used in conversion rules, not in the CDIn or the CDOut. It is used to avoid numerical ambiguity in a conversion rule i.e. 100\b  \b0 could either mean the value 100, or the field 100. @100 makes it clear that the rule is referring to the field 100.\par
\pard\fi-851\li1560\par
\pard\fi-1276\li1985\b\f2\fs20\page TTT\b0\f1\fs24\tab Represents the field tag: \par
\pard\li2410\b\f2\fs20 000\b0\f1\fs24  for the record label\line\b\f2\fs20 001\b0\f1\fs24  to \b\f2\fs20 ZZZ\b0\f1\fs24  for other fields\line If this part of CD is omitted, the current tag is assumed\par
\pard\fi-1276\li1985\par
\b\f2\fs20 (\i n\sub 1\nosupersub\i0 ) \b0\f1\fs24\tab Represents the tag occurrence number; the default is 1\par
\par
\b\f2\fs20 SS \b0\f1\fs24\tab Represents the subfield mark: \par
\pard\li2410\b\f2\fs20 I1\b0\f1\fs24  for first indicator\line\b\f2\fs20 I2\b0\f1\fs24  for second indicator\line\b\f2\fs20 $a\b0\f1\fs24  to \b\f2\fs20 $z\b0\f1\fs24 , \b\f2\fs20 $A\b0\f1\fs24  to \b\f2\fs20 $Z\b0\f1\fs24 , and \b\f2\fs20 $0\b0\f1\fs24  to \b\f2\fs20 $9\b0\f1\fs24  for other subfields\line If this part of CD is omitted, the complete field is assumed\par
\pard\fi-1276\li1985\par
\b\f2\fs20 (\i n\sub 2\nosupersub\i0 )\b0\f1  \fs24\tab Represents the subfield occurrence number; the default is 1\par
\par
\b\f2\fs20 /[\i n\sub 3\nosupersub\i0 [-]\i n\sub 4\nosupersub\i0 ]/\b0\f1  \fs24\tab Represents the character positions in the (sub)field:\par
\pard\li2410\b\i\f2\fs20 n\sub 3\nosupersub\b0\i0\f1\fs24  means only character position \b\i\f2\fs20 n\sub 3\nosupersub\b0\i0\f1\fs24\line\b\i\f2\fs20 n\sub 3\nosupersub\b0\i0\f1\fs24 - means character position \b\i\f2\fs20 n\sub 3\nosupersub\b0\i0\f1\fs24  to the end of the (sub)field\line -\b\i\f2\fs20 n\sub 4\nosupersub\b0\i0\f1\fs24  means character positions from beginning of the (sub)field to \b\i\f2\fs20 n\sub 4\nosupersub\b0\i0\f1\fs24\line If both \b\i\f2\fs20 n\sub 3\nosupersub\b0\i0\f1\fs24  and \b\i\f2\fs20 n\sub 4\nosupersub\b0\i0\f1\fs24  are present, characters from position \b\i\f2\fs20 n\sub 3\nosupersub\b0\i0\f1\fs24  to \b\i\f2\fs20 n\sub 4\nosupersub\b0\i0\f1\fs24  are assumed\line In rules files, 1 is always used to describe the first character position, not 0.\line If this part of CD is omitted, the complete (sub)field is assumed\par
\pard\fi-851\li1560\par
\pard\li709\i Examples:\par
\i0\par
\trowd\trgaph70\trleft709\trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\cellx3119\cellx8740\pard\intbl\f3\fs20 001\cell\pard\intbl\li72 The complete field 001\cell\row\trowd\trgaph70\trleft709\trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\cellx3119\cellx8740\pard\intbl 000/5/\cell\pard\intbl\li72 Character position 5 of the record label\cell\row\trowd\trgaph70\trleft709\trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\cellx3119\cellx8740\pard\intbl 000/11-12/\cell\pard\intbl\li72 Character positions 11 to 12 of the record label\cell\row\trowd\trgaph70\trleft709\trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\cellx3119\cellx8740\pard\intbl 010$a\cell\pard\intbl\li72 The (first) subfield $a of field 010\cell\row\trowd\trgaph70\trleft709\trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\cellx3119\cellx8740\pard\intbl 100$a/-8/\cell\pard\intbl\li72 The first 8 character positions of the $a of field 100\cell\row\trowd\trgaph70\trleft709\trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\cellx3119\cellx8740\pard\intbl 123I1\cell\pard\intbl\li72 The first indicator of field 123\cell\row\trowd\trgaph70\trleft709\trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\cellx3119\cellx8740\pard\intbl 701(\i n\i0 )$a\cell\pard\intbl\li72 The $a of \i n\super\i0 th\nosupersub  field 701\cell\row\trowd\trgaph70\trleft709\trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\cellx3119\cellx8740\pard\intbl 101$a(\i n\i0 )\cell\pard\intbl\li72 The \i n\super\i0 th\nosupersub  $a of field 101\cell\row\trowd\trgaph70\trleft709\trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\cellx3119\cellx8740\pard\intbl 123(\i nt\i0 )$a(\i ns\i0 )\cell\pard\intbl\li72 The \i ns\super\i0 th\nosupersub  $a of \i nt\super\i0 th\nosupersub  field 123\cell\row\trowd\trgaph70\trleft709\trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\cellx3119\cellx8740\pard\intbl If (Exists(@040))\cell\pard\intbl\li72 Tests for the presence of tag 040\cell\row\pard\li709\f1\fs24\par
\pard\keepn\s3\sb240\sa60\b\f2 Link between Input CD(s) and Output CD(s)\par
\pard\fi-698\li709\b0\f1\par
\pard\li709 A CD enables the user to address a particular part of a record.\par
\par
To convert records from one format to another, a set of CDs in the input record must be linked to a set of CDs in the output record and a set of conversion rules.\par
\par
Each output CD must be defined together with a set of input CDs and a conversion rule. In fact, one output CD is usually linked with only one input CD.\par
\par
Each line in a rules file has the following format:\par
\par
\pard\li709\tx1134\b\f2\fs20\tab [CDIn] | [<][CDOut] | Conversion rule\par
\pard\li709\b0\f1\fs24\par
CDIn is the most important CD for the creation of the CDOut.\par
\pard\li1440\ul A Rule will be evaluated only if a CDIn exists in the input record.\ulnone\i\par
\i0 If the CDIn is omitted, the last CDIn in the file is assumed.\par
\pard\li709\par
CDOut is the CD to be created (or modified).\par
\pard\li1440 If the CDOut is omitted, the last CDOut in the file is assumed.\par
If a \lquote <\lquote  is placed before the CDOut, the CDOut will be added to the input record (in the memory), creating a pseudo-CDIn. This allows the user to re-convert the newly created CDIn, to manage complex rules, as rules cannot manipulate CDOut data. Normally i.e. when \lquote <\lquote  is not present, the CDOut is added to the output record.\par
\par
\pard\li709 Rules describe how to create or modify the CDOut from the CDIn and other CDs, if necessary. If other CDs are necessary to create the CDOut, they can be accessed from within the rule.\par
\par
Many rules are simple translations e.g.\par
\par
\f4\fs20 111$a | 710$a | \par
\f1\fs24\par
\f4\fs20 111$a | 710$a | S\par
\f1\par
\fs24 Either of the above can be used to place the S(ource) data of UKMARC 111$a into UNIMARC 710$a.\par
\par
The 'pipe' symbol '|' must have at least one space or tab on each side of it. The two lines below are identical as far as the software is concerned.\par
\par
\f4\fs20 111$a[space]|[space][space][tab]710$a[space]|[tab][tab]\par
\f1\fs24\par
\f4\fs20 111$a[tab]|[tab]710$a[tab]|[tab]\par
\f1\fs24\par
The following is a slightly more complex example:\par
\par
\f4\fs20 [earlier commands]\line 660 | <66A$2 | 'COMPASS'\line 66A | 606 | \par
\f1\fs24\par
Here the conversion takes place in two stages: a temporary CDIn is created from the original CDIn then that CDIn is used to create a complete CDOut field\par
\par
\pard\keepn\s3\sb240\sa60\b\f2 Occurrences\par
\pard\li720\lang1033\b0\f1\par
\pard\li709\lang2057 Each CD can be represented by three occurrence numbers :\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\b\i\f2\fs20 nt\b0\i0 :\f1\fs24  (no. of tag) represents the occurrence of the tag (field)\par
\b\i\f2\fs20{\pntext\f9\'B7\tab}ns\b0\i0\f1\fs24 : (no. of subfield) represents the occurrence of the subfield\par
\b\i\f2\fs20{\pntext\f9\'B7\tab}n\b0\i0 :\f1\fs24  represents the global occurrence of the CD\par
\pard\li709\par
\pard\li125\lang1033 nt=1\par
ns=3\par
n=3\par
nt=1\par
ns=2\par
n=2\par
nt=1\par
ns=1\par
n=1\par
\pard\li709\i Example:\i0\par
\pard\li284\par
\par
\par
\par
\pard\li1985\f2\fs20 123\tab  $a...    $a...    $b...    $a...\par
123\tab  $c...    $a...    $a...    \par
\pard\f1\fs24\par
\pard\li125 nt=2\par
ns=2\par
n=5\par
nt=2\par
ns=1\par
n=4\par
\pard\par
\pard\li709\lang2057\par
\par
\par
\par
For input CDs, occurrences are accessed via \i nt, ns\i0  and \i n\par
\i0 For output CDs, occurrences are accessed via \i nto, nso\i0  and \i no\par
\i0\par
\pard\keepn\s3\sb240\sa60\b\f2 Occurrences in CDIn and CDOut\par
\pard\li720\lang1033\b0\f1\par
\pard\li709\lang2057 As has been described previously, a rule is evaluated when the corresponding CDIn is found in the input record.\par
\par
Each corresponding CDIn has particular occurrences (\i nt, ns\i0  and \i n\i0 ).\par
\par
From each CDIn the software must create or modify a particular CDOut and (\i nt, ns\i0  and \i n\i0 ) must be linked with (\i nto, nso\i0  and \i no\i0 ).\par
\par
To describe this in a rule file, the easiest way is to describe CDIn with no occurrence number, CDOut with occurrence numbers (\i nt, ns, n, nto, nso \i0 or \i no\i0 ), and allow rules to access these occurrence numbers.\par
\par
The table below explains how each type of input occurrence can be linked to each kind of output occurrence: \par
\par
R\b\f2\tab\tab\b0\f1 Means the tag/subfield is repeatable, \par
NR \tab\tab Means the tag/subfield is not repeatable.\i\par
\i0 BRule\tab\tab Is the first character of the rule\par
\page\par
\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs \cellx1560\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs \cellx4431\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs \cellx5210\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs \cellx9499\pard\intbl\qc\lang1033\page\b\f2\fs16 CD In\cell CD Out\cell\lang1031 B\f1\fs20\cell\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrr\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrr\brdrw45\brdrs \cellx1560\clbrdrr\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrr\brdrw45\brdrs \cellx4431\clbrdrr\brdrw45\brdrs \cellx5210\clbrdrr\brdrw45\brdrs \cellx9499\pard\intbl\qc\f2\fs16 Tag\cell Subfield\f1\fs20\cell\lang1033\f2\fs16 Tag\cell Occ\cell Subfield\cell Occ\cell Rule\cell Comment\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031\b0\f1\fs20 NR\cell NR\cell NR\cell\cell\lang1033 NR\cell\cell\cell\pard\intbl The CDIn goes in CDOut\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 NR\cell NR \cell NR \cell\cell\lang1033 R\cell\cell\cell\pard\intbl Idem, only one occurrence of CDOut will exist\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 NR\cell NR\cell R\cell\cell\lang1033 NR\cell\cell\cell\pard\intbl Idem, only one occurrence of CDOut will exist\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs \cellx9499\pard\intbl\qc\lang1031 NR\cell NR\cell R\cell\cell\lang1033 R\cell\cell\cell\pard\intbl Idem, only one occurrence of CDOut will exist\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 NR\cell R\cell NR\cell\cell\lang1033 NR\cell\cell +\cell\pard\intbl Each subfield of CD In will go in the same subfield of CD Out (they must be merged : + at beginning of rule signifies Destination+\'85).\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 NR\cell R\cell NR\cell\cell\lang1033 R\cell\i n\i0\cell\cell\pard\intbl Each occurrence of subfield in input will create a new occurrence of subfield in output.\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 NR\cell R\cell R\cell\i n\i0\cell\lang1033 NR\cell\cell\cell\pard\intbl Each occurrence of subfield in input will create a new occurrence of field in output.\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 NR\cell R\cell R\cell\cell R\cell\i n\i0\cell\cell\pard\intbl\lang1033 Each occurrence of subfield in input will create a new occurrence of subfield in output\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs \cellx9499\pard\intbl\qc\lang1031 NR\cell R\cell R\cell\i n\i0\cell\lang1033 R\cell\cell\cell\pard\intbl Each occurrence of subfield in input will create a new occurrence of field in output.\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw45\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 R\cell NR\cell NR\cell\i\cell\lang1033\i0 NR\cell\cell +\cell\pard\intbl Each occurrence of field in input will be merged in the same subfield (if + is omitted at the beginning of the rule, an error of format can occur in output).\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 R\cell NR\cell NR\cell\i\cell\lang1033\i0 R\cell\i n\i0\cell\cell\pard\intbl Each occurrence of field in input will create a new subfield  in the same field in output\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 R\cell NR\cell R\cell\i n\cell\lang1033\i0 NR\cell\i\cell\i0\cell\pard\intbl Each occurrence of field in input will create a new occurrence of the field in output\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 R\cell NR\cell R\cell\i\cell\i0 R\cell\i n\cell\i0\cell\pard\intbl\lang1033 Each occurrence of field in input will create a new subfield  in the same field in output\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw45\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw45\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw45\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw45\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw45\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw45\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw45\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw45\brdrs \cellx9499\pard\intbl\qc\lang1031 R\cell NR\cell R\cell\i n\cell\lang1033\i0 R\cell\i\cell\i0\cell\pard\intbl Each occurrence of field in input will create a new occurrence of the field in output\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 R\cell R\cell NR\cell\i\cell\i0 NR\cell\i\cell\lang1033\i0 +\cell\pard\intbl Each occurrence of field and/or subfield will be merged in the same subfield in output (if + is omitted at the beginning of the rule, an error of format can occur).\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 R\cell R\cell NR\cell\i\cell\i0 R\cell\i n\cell\i0\cell\pard\intbl\lang1033 Each occurrence of field and/or subfield in input will create a new occurrence of subfield in output\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc\lang1031 R\cell R\cell R\cell\i n\cell\i0 NR\cell\i\cell\i0\cell\pard\intbl\lang1033 Each occurrence of field and/or subfield in input will create a new occurrence of field in output\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc R\cell R\cell R\cell\i\cell\i0 R\cell\i n\cell\i0\cell\pard\intbl Each occurrence of field and/or subfield in input will create a new occurrence of subfield in output\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw15\brdrs \cellx9499\pard\intbl\qc R\cell R\cell R\cell\i n\cell\i0 R\cell\i\cell\i0\cell\pard\intbl Each occurrence of field and/or subfield in input will create a new occurrence of field in output\cell\row\trowd\trgaph70\trbrdrl\brdrs\brdrw15 \trbrdrt\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trpaddl70\trpaddr70\trpaddfl3\trpaddfr3
\clbrdrl\brdrw45\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw45\brdrs \cellx773\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw45\brdrs \cellx1560\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw45\brdrs \cellx2257\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw45\brdrs \cellx3045\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw45\brdrs \cellx3824\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw45\brdrs \cellx4431\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw45\brdrs \cellx5210\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw45\brdrs\clbrdrb\brdrw45\brdrs \cellx9499\pard\intbl\qc R\cell R\cell R\cell\i nt\cell\i0 R\cell\i ns\cell\i0\cell\pard\intbl Each occurrence of field (numbered \i nt\i0 ) will create a new occurrence of field. Each occurrence of subfield (numbered \i ns\i0 ) will create a new occurrence of subfield within current field.\cell\row\pard\li709\lang2057\fs24\par
The table shows how the link between one particular CDIn to one other particular CDOut can be described, with n, ns and nt appearing in CDOut occurrences.\par
\par
Three configurations can occur:\par
\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120 One particular CDIn is linked to a particular CDOut (1-1). This case is treated in the table.\par
{\pntext\f9\'B7\tab}A set of particular CDIn are linked to only one CDOut (n-1). This case has two different configurations:\par
\pard{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent360\pnstart1\pndec{\pntxta.}}
\fi-425\li1843\sa120\qj\lang1036 The number of CDIn to be merged is known;\i  \i0 it is possible, in the rule, to access each CDIn to create the appropriate CDOut.\par
\pard{\pntext\f1 2.\tab}{\*\pn\pnlvlbody\pnf1\pnindent360\pnstart1\pndec{\pntxta.}}
\fi-425\li1843\sa120 The number of CDIn to be merged is unknown. In this case (see table) each occurrence in the input can be merged in the output. The + at the beginning of the rule means that every time the rule is evaluated (for each occurrence of each CDIn), the resulting rule will be merged in the contents of CDOut.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\lang2057 A particular CDIn must be used to create a set of CDOut (1-n). This case also has two different configurations:\par
\pard\li709\fs16\par
\pard{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent360\pnstart1\pndec{\pntxta.}}
\fi-360\li1778\sa120\fs24 The number of CDOut to be created is known. It is possible to create as many lines in the rules file as will be created for CDOut, together with appropriate rules.\par
{\pntext\f1 2.\tab}The number of CDOut to be created is unknown. In this case you will be required to use the \b Redo \b0 command. The part of the rule before \b Redo\b0  is a normal rule used to generate CDOut. The part of the rule after \b Redo\b0  creates a pseudo-CDIn which will be used to re-evaluate the rule as many times as necessary (the \i no\i0  is incremented, like \i nso \i0 or\i  nto etc\i0 ) until the pseudo-CDIn created is empty. In this particular case the occurrence number of CDOut will not match any occurrence number of CDIn. In the rules file \i nso, nto\i0  or \i no\i0  must appear.\par
\pard\li709\par
\pard\keepn\s3\sb240\sa60\b\f2 Rules File Structure\par
\pard\li709\b0\f1\par
Each line of a rules file must have the following structure:\par
\par
\pard\li709\tx1985\b\f2\fs20\tab [TTT\sub in\nosupersub ][SS\sub in]\nosupersub [/\i n\sub 1\nosupersub\i0 [-\i n\sub 2\nosupersub\i0 ]/] | [<][TTT\sub out\nosupersub [(\i n\sub 3\nosupersub\i0 )]][SS\sub out\nosupersub [(\i n\sub 4\nosupersub\i0 )]][/\i n\sub 5\nosupersub\i0 [-\i n\sub 6\nosupersub\i0 ]/] | Rule\par
\pard\li709\b0\f1\fs24\par
\par
\pard\fi-1276\li1985\b\f2\fs20 TTT\sub in\tab\nosupersub\b0\f1\fs24 Represents the field tag of the CDIn which will start the evaluation of the rule:\par
\pard\li2410\b\f2\fs20 000 \b0\f1\fs24 for the record label.\line\b\f2\fs20 001\b0\f1\fs24  to \b\f2\fs20 ZZZ\b0\f1\fs24  for all other fields.\line If this part of the CD is omitted the previous \b\f2\fs20 TTT\sub in\nosupersub\b0\f1\fs24  is assumed.\par
\pard\li709\tx1985\par
\pard\fi-1276\li1985\b\f2\fs20 Ss\sub in\tab\nosupersub\b0\f1\fs24 Represents the subfield mark:\par
\pard\li2410\b\f2\fs20 I1\b0\f1\fs24  for first indicator.\line\b\f2\fs20 I2\b0\f1\fs24  for second indicator.\line\b\f2\fs20 $a\b0\f1\fs24  to \b\f2\fs20 $z\b0\f1\fs24 , \b\f2\fs20 $A\b0\f1\fs24  to \b\f2\fs20 $Z\b0\f1\fs24 , and \b\f2\fs20 $0\b0\f1\fs24  to \b\f2\fs20 $9\b0\f1\fs24  for other subfields.\line If this part of CD is omitted, the complete field is assumed.\par
\par
\pard\li709\tx1985\par
\pard\fi-1276\li1985\b\f2\fs20 /\i n\sub 1\nosupersub\i0 [-\i n\sub 2\nosupersub\i0 ]/\tab\b0\f1\fs24 Represents the character positions in the (sub)fields in the CDIn.\par
\pard\li2410\tx1985\b\i\f2\fs20 n\sub 1\nosupersub\b0\i0\f1\fs24   means only character position \b\i\f2\fs20 n\sub 1\nosupersub\b0\i0\f1\fs24\line\b\i\f2\fs20 n\sub 1\nosupersub\b0\i0\f1 -\fs24  means character positions \b\i\f2\fs20 n\sub 1\nosupersub\b0\i0\f1\fs24  to the end of the (sub)field.\line -\b\i\f2\fs20 n\sub 2\nosupersub\b0\i0\f1\fs24  means the character positions from beginning of the (sub)field to \b\i\f2\fs20 n\sub 2\nosupersub\b0\i0\f1\fs24\line If both \b\i\f2\fs20 n\sub 1\nosupersub\b0\i0\f1\fs24  and \b\i\f2\fs20 n\sub 2\nosupersub\b0\i0\f1\fs24  are present, characters from position \b\i\f2\fs20 n\sub 1\nosupersub\b0\i0\f1\fs24  to \b\i\f2\fs20 n\sub 2\nosupersub\b0\i0\f1\fs24  are assumed.\line In rules files, 1 is always used to describe the first character position, not 0.\line\par
\pard\fi-1276\li1985\b\f2\fs20 <\b0\f1\fs24\tab Means that the CDOut which is created by the rule will be added to the input record, not to the output record as it normally would.\par
\pard\fi-1701\li2410\par
\pard\fi-1276\li1985\b\f2\fs20 TTT\sub out\tab\nosupersub\b0\f1\fs24 Represents the field tag of the CDOut. It is created or updated during the evaluation of the rule.\par
\pard\li2410\b\f2\fs20 000 \b0\f1\fs24 for the record label.\line\b\f2\fs20 001\b0\f1\fs24  to \b\f2\fs20 ZZZ\b0\f1\fs24  for all other fields.\line\b\f2\fs20 ???\b0\f1\fs24  means that the CDIn is intentionally not converted, otherwise an error would be generated.\par
This part of the CD is mandatory.\par
\pard\fi-1276\li1985\par
\pard\fi-1134\li1843\b\i\f2\fs20 (n\sub 3\nosupersub )\sub\tab\nosupersub\b0\i0\f1\fs24 Represents the tag occurrence number. The values which can be used are:\par
\pard\li2410\b\i\f2\fs20 n, ns, nt, no, \b0\i0\f1\fs24 or \b\i\f2\fs20 nto\b0\i0\f1\fs24 . If \b\i\f2\fs20 n\sub 3\nosupersub\b0\i0\f1\fs24   and \b\i\f2\fs20 n\sub 4\nosupersub\b0\i0\f1\fs24  are omitted, the default value of \b\i\f2\fs20 n\sub 3\nosupersub\b0\i0\f1\fs24   is \b\i\f2\fs20 nt\b0\i0\f1\fs24 , and the default value of \b\i\f2\fs20 n\sub 4\nosupersub\b0\i0\f1\fs24  is \b\i\f2\fs20 ns\b0\i0\f1\fs24 . If only \b\i\f2\fs20 n\sub 3 \nosupersub\b0\i0\f1\fs24  is omitted, its default value is 1.\par
\pard\li709\tx1985\par
\pard\fi-1276\li1985\b\f2\fs20 SS\sub out\tab\nosupersub\b0\f1\fs24 Represents the subfield mark.\par
\pard\li2410\b\f2\fs20 I1\b0\f1\fs24  for first indicator.\line\b\f2\fs20 I2\b0\f1\fs24  for second indicator.\line\b\f2\fs20 $a\b0\f1\fs24  to \b\f2\fs20 $z\b0\f1\fs24 , \b\f2\fs20 $A\b0\f1\fs24  to \b\f2\fs20 $Z\b0\f1\fs24 , and \b\f2\fs20 $0\b0\f1\fs24  to \b\f2\fs20 $9\b0\f1\fs24  for other subfields.\line If this part of CD is omitted, the complete field is assumed.\par
\pard\li709\tx1985\par
\pard\fi-1276\li1985\b\i\f2\fs20 (n\sub 4\nosupersub )\sub\tab\nosupersub\b0\i0\f1\fs24 Represents the subfield occurrence number. The values which can be used are:\par
\pard\li2410\b\i\f2\fs20 n, ns, nt, no, \b0\i0\f1\fs24 or \b\i\f2\fs20 nso\b0\i0\f1\fs24 . If \b\i\f2\fs20 n\sub 3\nosupersub\b0\i0\f1\fs24   and \b\i\f2\fs20 n\sub 4\nosupersub\b0\i0\f1\fs24  are omitted, the default value of \b\i\f2\fs20 n\sub 3\nosupersub\b0\i0\f1\fs24   is \b\i\f2\fs20 nt\b0\i0\f1\fs24 , and the default value of \b\i\f2\fs20 n\sub 4\nosupersub\b0\i0\f1\fs24  is \b\i\f2\fs20 ns\b0\i0\f1\fs24 . If only \b\i\f2\fs20 n\sub 3 \nosupersub\b0\i0\f1\fs24  is omitted, its default value is 1.\par
\pard\li709\tx1985\par
\pard\fi-1276\li1985\b\f2\fs20 /\i n\sub 5\nosupersub\i0 [-\i n\sub 6\nosupersub\i0 ]/\tab\b0\f1\fs24 Represents the character positions in the (sub)fields in the CDOut.\par
\pard\li2410\b\i\f2\fs20 n\sub 5 \nosupersub  \b0\i0\f1\fs24 means only character position \b\i\f2\fs20 n\sub 5\line\nosupersub n\sub 5\nosupersub\b0\i0\f1\fs24 - means character position \b\i\f2\fs20 n\sub 5\nosupersub\b0\i0\f1\fs24  to the end of the (sub)field.\line -\b\i\f2\fs20 n\sub 6\nosupersub\b0\i0\f1\fs24  means character positions from beginning of the (sub)field to \b\i\f2\fs20 n\sub 6\nosupersub\b0\i0\f1\fs24\line If both \b\i\f2\fs20 n\sub 5\nosupersub\b0\i0\f1\fs24  and \b\i\f2\fs20 n\sub 6\nosupersub\b0\i0\f1\fs24  are present, characters from position \b\i\f2\fs20 n\sub 5\nosupersub\b0\i0\f1\fs24  to \b\i\f2\fs20 n\sub 6\nosupersub\b0\i0\f1\fs24  are assumed.\line In rules files, 1 is always used to describe the first character position, not 0.\line\par
\pard\s2\fi-720\li720\sb120\b\f2\fs28\page Rules \par
\pard\li709\b0\f1\fs24\par
\pard\keepn\s3\sb240\sa60\b\f2 Basic Concept\par
\pard\li709\b0\f1\par
To convert input records into output records, each CDIn must be linked to a CDOut with a rule. This rule must enable the software to make a lot of string operations. The basic concept is as follows.\par
\par
When you use a pocket calculator the current result is on the screen and it can be modified using operator keys (+,-, etc.). The final result is calculated step by step. For example, if you want to calculate the result of 1/(7+(4+3)*5), you can do:\par
\par
\pard\li720\tx1134\tx1701\f3\fs20\tab 4\par
\tab +\par
\tab 3\par
\tab =\tab\tab\f6\'e0\f3\tab 7\par
\tab\f7\'b4\f3\par
\tab 5\tab\tab\f6\'e0\f3\tab 35\par
\tab +\par
\tab 7\par
\tab =\tab\tab\f6\'e0\f3\tab 42\par
\tab\lang1033\f8{\pict\wmetafile8\picwgoal320\pichgoal420 
010009000003c60000000300150000000000050000000902000000000400000002010100050000
000102ffffff00040000002e01180005000000310201000000050000000b020000000005000000
0c02a00200020e00000026060f001200ffffffff000008000000e0ffc4ffe00164020b00000026
060f000c004d617468547970650000600008000000fa0200001000000000000000040000002d01
00000500000014023c00c2010500000013027c02280015000000fb0240ff000000000000900100
0000000002001054696d6573204e657720526f6d616e000300040000002d01010009000000320a
5c018b00010000003100600015000000fb0240ff0000000000009001010000000002001054696d
6573204e657720526f6d616e005a00040000002d01020004000000f001010009000000320a7c02
1a0101000000780054000a00000026060f000a00ffffffff01000000000010000000fb02100007
0000000000bc02000000000102022253797374656d0005040000002d01010004000000f0010200
030000000000
}\lang2057\f3\tab\tab\f6\'e0\f3\tab 0.02380952380952\f2\fs24\par
\pard\li720\par
\pard\li709\f1 This can also be described as :\par
\par
\pard\li709\tx1134\f3\fs20\tab 4+3;S\f7\'b4\f3 5+7;1/\i S\i0\par
\pard\li709\f1\fs24\par
Here';' is used to indicate the end of a sequence of commands, and \b\f2\fs20 S\b0\f1\fs24  represents the result of the last operation.\par
\par
This basic concept is used in USEMARCON i.e. a set of basic operators is used to create the final result which will be the content of the CDOut (essentially string manipulation ).\par
\par
The rule syntax is:\par
\par
\pard\li709\tx1134\b\f2\fs20\tab [+][instruction\sub 1\nosupersub  ; [instruction\sub 2\nosupersub  ; [\'85 instruction\sub n \nosupersub ]\'85]\par
\pard\li709\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\b0 The + at the beginning means the actual content of CDOut is merged with result of the following rule.\par
{\pntext\f9\'B7\tab}The default instruction i.e. when no instruction is specified in the rule, is to copy CDIn to CDOut (or merge it if a + appears at the beginning of the rule).\b\par
\pard\li709 Note\b0 : In all instructions, upper case and lower case characters can be used.\par
\par
\pard\keepn\s3\sb240\sa60\b\f2 Variables\par
\pard\li709\b0\f1\par
\pard\keepn\s4\li709\qj\b\f2 CD variables\par
\pard\li720\lang1033\b0\f1\par
\pard\li709\lang2057 There are two Content Designator variables :\par
\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1080\sa120\b\f2\fs20 S\b0\f1\fs24  represents the result of the last instruction; it is the Source of the current operation. It can be either a text string or a number, depending on the result of the last instruction.\par
\b\f2\fs20{\pntext\f9\'B7\tab}[@][TTT[(\i n\sub 1 \nosupersub\i0 )]] [SS[(\i n\sub 2 \nosupersub\i0 )] [/[\i n\sub 3\nosupersub\i0 [-]\i n\sub 4 \nosupersub\i0 ]/])\b0\f1\fs24  which represents any valid CD. If TTT is omitted, the current CDIn Tag is assumed. If SS is omitted, the whole Tag (or fixed position of it) is assumed. SS can be either $\i x\i0  or I1 or I2.\par
\pard\li709\par
\pard\keepn\s4\li709\qj\b\f2 Occurrence variables\par
\pard\li720\lang1033\b0\f1\par
\pard\li709\lang2057 There are six occurrence variables:\par
\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\tx1701\b\i\f2\fs20 n\b0\i0\f1\fs24\tab Represents the occurrence of CDIn in input record\par
\b\i\f2\fs20{\pntext\f9\'B7\tab}nt\b0\f1\fs24\tab\i0 Represents the occurrence of the current tag of CDIn in the input record\par
\b\i\f2\fs20{\pntext\f9\'B7\tab}ns\b0\i0\f1\fs24\tab Represents the occurrence of the current subfield within the current tag\par
\b\i\f2\fs20{\pntext\f9\'B7\tab}no\b0\i0\f1\fs24\tab Represents the occurrence of CDOut in the output record\par
\b\i\f2\fs20{\pntext\f9\'B7\tab}nto\b0\i0\f1\fs24\tab Represents the occurrence of the current tag of CDOut in the output record\par
\b\i\f2\fs20{\pntext\f9\'B7\tab}nso\b0\i0\f1\fs24\tab Represents the occurrence of the current subfield of CDOut within the \tab current tag\par
\pard\li709\par
\pard\keepn\s4\li709\qj\b\f2 Literal values\par
\pard\li720\lang1033\b0\f1\par
\pard\li709\lang2057 There are two kinds of literal values :\par
\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1080\sa120\b '\'85'\b0\tab Represents a literal string (enclosed with a single quotation marks).\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
\i{\pntext\f9\'B7\tab}Example\f3\fs20 :\par
\i0{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\f4\tab 'This is a string'\par
\f3{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li1134\f1\fs24 Each character can be represented by its hexadecimal value preceded by a backslash (\\). Some special characters are managed in strings: \par
\i{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi425\li709\i0 - the \lquote\\\rquote  which must be coded as \lquote\\\\\rquote  or its hexadecimal value,\i\par
\i0{\pntext\f9\'B7\tab}- the subfield delimiter which can be coded \lquote $\rquote  or its hexadecimal value (0x1F),\i\par
\i0{\pntext\f9\'B7\tab}- the character \lquote $\rquote  which must be coded as \lquote\\$\rquote  or its hexadecimal value.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i\par
{\pntext\f9\'B7\tab}Example\i0 :\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\par
{\pntext\f9\'B7\tab}\tab\f7\fs20\'b9\f4 NSB\f7\'b9\f4  is \lquote\\88\rquote\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1080\sa120\b\i\f2 ii\f3\'85\b0\i0\tab\tab\f1\fs24 Represents a literal numeric (where \i i \i0 is a digit).\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i Example\i0 :    123 is a numeric\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\keepn\s4\li709\qj\b\f2 Date and Time variables\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\b0\f1\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\lang2057 There are six date and time variables:\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\b Year\b0\tab Contains the current year in the format YYYY\par
\b{\pntext\f9\'B7\tab}Month\b0\tab Contains the current month (from 1 to 12)\par
\b{\pntext\f9\'B7\tab}Day\b0\tab Contains the current day in the month (from 1 to 31)\par
\b{\pntext\f9\'B7\tab}Hour\b0\tab Contains the current hour (from 0 to 23)\par
\b{\pntext\f9\'B7\tab}Minute\b0\tab Contains the current minute within the hour (from 0 to 59)\par
\b{\pntext\f9\'B7\tab}Second\b0\tab Contains the current second within the minute (from 0 to 59)\par
\pard\keepn\s3\sb240\sa60\b\f2 Instructions\par
\pard\li720\b0\par
\pard\li709\f1 There are six kinds of instruction: conditional, boolean, loop, memory, conversion and translation. Each instruction can begin with an upper case letter, the following letters must be in lower case.\par
\par
\pard\keepn\s4\li709\qj\b\f2 Conditional instructions\par
\pard\li720\lang1033\b0\f1\par
\pard\li709\lang2057 There are two possible conditional instructions:\par
\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\b\f2\fs20 If \'85 Then\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0 The syntax of this instruction is:\par
{\pntext\f9\'B7\tab}\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}If\ulnone\f1\fs24  \b0\i boolean instruction\b\i0  \ul\f2\fs20 Then\ulnone\f1\fs24  \b0\i translation instruction\par
\i0{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}If the result of a boolean instruction is TRUE then the instruction after \b\f2\fs20 Then\b0\f1\fs24  is evaluated, as well as any subsequent instructions contained in the rule. If the result of a boolean instruction is FALSE then the \ul CDOut is not created\ulnone .\par
{\pntext\f9\'B7\tab}\par
\i{\pntext\f9\'B7\tab}Example (UNIMARC to UKMARC):\par
\fs20{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\i0\f3\tab 101$a\tab | 008/36-38/\tab | \b If\b0  (\i n\i0 =1) \b Then\b0  S\i\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i0\par
\f1\fs24{\pntext\f9\'B7\tab}Character positions 36-38 in the 008 are only filled in if the occurrence number of 101$a is 1. In other cases, this rule does not do anything with 008.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1701\f4\fs20\tab 101$aeng\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i\f1\fs24 becomes:\i0\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1701\tab\f4\fs20 008\fs24  \f1 with \f4\fs20 eng\f1\fs24  in character positions 36-38\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i Example (UNIMARC to UKMARC):\i0\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\f3\fs20\par
{\pntext\f9\'B7\tab}\tab 101$a\tab | 041$a\tab | + S\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i\f1\fs24\par
\i0{\pntext\f9\'B7\tab}041$a is merged with 101$a each time a 101$a appears in the input record.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1701\f4\fs20\tab 101$aeng$afre$ager\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i\f1\fs24 becomes:\i0\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1701\f4\fs20\tab 041$aengfreger\par
\f1\fs24{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i Example (UNIMARC to UKMARC):\par
\i0\f3\fs20{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\tab 215$a\tab | 300(\i n\i0 )$a\tab | \'85 ; From(First(Number)); \b If\b0  (S!='') \b Then\b0  \tab\tab\tab\tab\tab\tab From(First(String)); \b If\b0  \'85\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
{\pntext\f9\'B7\tab}After evaluation of the From(First(Number)) instruction, the result (\b\f2\fs20 S\b0\f1\fs24 ) can be either empty or not empty. If \b\f2\fs20 S\b0\f1\fs24  is not empty, then the evaluation of the rule continues, else 300(\i n\i0 )$a is not created.\par
\i{\pntext\f9\'B7\tab}Note\i0  that != is used to represent \lquote not equal to\rquote .\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\b\f2\fs20 If \'85 Then \'85 Else\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0 The syntax of this instruction is :\par
{\pntext\f9\'B7\tab}\par
\ul\b\f2{\pntext\f9\'B7\tab}If\ulnone  \b0\i\f1 boolean instruction\i0  \ul\b\f2 Then\ulnone\f1  \b0\i translation instruction\f2  \ul\b\i0 Else\ulnone\f1  \b0\i translation instruction\i0\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}If the result of a boolean instruction is TRUE then the instruction after \b\f2\fs20 Then\b0\f1\fs24  is evaluated. If the result of a boolean instruction is FALSE then the instruction after \b\f2\fs20 Else\b0\f1\fs24  is evaluated.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}In both cases any subsequent instructions of the rule will be evaluated. \par
{\pntext\f9\'B7\tab}\par
\i{\pntext\f9\'B7\tab}Example \fs20 (UNIMARC to UKMARC)\fs24 :\i0\f3\fs20\par
\f4{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\tab 071I1 | 538(n)$a |  Table(\lquote 538.tbl\rquote ); \b If\b0  Exists($b) \b Then\b0  S+\lquote :\strike b\strike0\rquote  \tab\tab\tab\tab\tab +$b \b Else\b0  S\par
{\pntext\f9\'B7\tab}\tab 071$a | 538(n)$b |\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\sb240\f1\fs24 The table (538.tbl) converts the value of indicator 1, e.g. 2, into an expression, e.g. \lquote Pl. no.\rquote ; if there is a $b in the 071 containing the name of the agency, e.g. \lquote Breitkopf & H\'e4rtel\rquote ; 538$a will contain \lquote Pl. no.: Breitkopf & H\'e4rtel\rquote  else it will simply contain \lquote Pl. no.\rquote . The command line that follows puts the number itself into $b of the 538 field.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1701\f4\fs20\tab\lang1031 071.20$aB. & H. 8801$bBreitkopf & H\'e4rtel\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\lang2057\i\f1\fs24 becomes:\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1701\i0\f4\fs20\tab 538.00$aPl. no. \lang1031 Breitkopf & H\'e4rtel$bB. \lang2057 & H. 8801\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\keepn\s4\li709\qj\b\f2 Boolean instructions\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\b0\f1\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\lang2057 There are two kinds of boolean instructions: simple boolean instructions and boolean functions.\par
{\pntext\f9\'B7\tab}Boolean instructions can be grouped with parentheses, and combined with \b\f2\fs20 And\f1\fs24 ,\b0  \b\f2\fs20 Or\b0\f1\fs24  and \b\f2\fs20 Not\f1\fs24  \b0 operators.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-425\li1134\sa120\i boolean\sub 1\nosupersub  \ul\b\i0\fs20 And\ulnone\b0\i\fs24  boolean\sub 2\nosupersub\i0 : is TRUE if each boolean expression is TRUE, otherwise it is FALSE\par
\i{\pntext\f9\'B7\tab}boolean\sub 1\nosupersub  \ul\b\i0\fs20 Or\ulnone\b0\i\fs24  boolean\sub 2\nosupersub\i0 : is TRUE if one of both boolean expressions are TRUE, otherwise it is FALSE\par
\ul\b\fs20{\pntext\f9\'B7\tab}Not\ulnone\b0\fs24  \i boolean\i0 : is TRUE if boolean expression is FALSE. It is FALSE if boolean expression is TRUE\par
\b{\pntext\f9\'B7\tab}(\b0\i boolean\b\i0 )\b0 : is a valid boolean expression\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\b Simple boolean instructions\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0 A simple boolean instruction can be:\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-425\li1134\sa120\i t_instruction\sub 1\nosupersub\i0   \b =\b0  \i t_instruction\sub 2\nosupersub\i0 : The result is TRUE if the result of both instructions is the same string, otherwise it is FALSE. If one instruction is a number and the other a string, the number is converted into a string before comparing them.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li720\sa120\i Example : \par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li720\sa120\tx1134\i0\f3\fs20\tab 12 = 12, 12 = '12' \f1\fs24 are True but\i\f3\fs20\par
\i0{\pntext\f9\'B7\tab}\tab 13 = 12, 13 = '\strike b\strike0 13' \f1\fs24 are False, because of the blank before 13.\f3\fs20\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-425\li1134\sa120\i\f1\fs24 t_instruction\sub 1\nosupersub\i0  \b !=\b0  \i t_instruction\sub 2\nosupersub\i0 : The result is TRUE if the instructions are not equal, otherwise it is FALSE. If one instruction is a number and the other is a string, the number is converted into a string before comparing them.\par
\i{\pntext\f9\'B7\tab}t_instruction\sub 1\nosupersub\i0  \ul\b\f2\fs20 IN\ulnone\b0\f1\fs24  \i t_instruction\sub 2\nosupersub\i0 : The result is TRUE if the result of \i t_instruction\sub 1\nosupersub\i0  is a substring of result of \i t_instruction\sub 2\nosupersub\b\i0  \b0 , otherwise it is FALSE. If the instruction is a number it is converted into a string. \i\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709 Example :\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\i0\tab\lquote every\rquote  In \lquote hello everybody\rquote  is TRUE\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\tab\lquote 19\rquote  In \lquote 1994\rquote  is TRUE\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-425\li1134\sa120\i t_instruction\sub 1\nosupersub\i0  \b >\b0  \i t_instruction\sub 2\nosupersub\i0 : The result is TRUE if \i t_instruction\sub 1\nosupersub\i0  is greater than \i t_instruction\sub 2\nosupersub  \i0 , otherwise it is FALSE. If both instructions are numbers, the comparison is made between the numbers. If one is a string, the comparison is made between the strings. One string is classified as greater than another if it is sorted alphabetically after another.\par
\i{\pntext\f9\'B7\tab}t_instruction\sub 1\nosupersub\i0  \b <\b0  \i t_instruction\sub 2\nosupersub\i0 : The result is TRUE if \i t_instruction\sub 1\nosupersub\i0  is less than \i t_instruction\sub 2 \nosupersub\i0 , otherwise it is FALSE. If both instructions are numbers, the comparison is made between numbers. If one is a string, the comparison is made between strings. A string is less than another, if the other is sorted alphabetically before it.\par
\i{\pntext\f9\'B7\tab}t_instruction\sub 1\nosupersub\i0  \b\f7\'b3\b0\f1  \i t_instruction\sub 2\nosupersub\i0 : The result is TRUE if \i t_instruction\sub 1\nosupersub\i0  is greater than or equal to \i t_instruction\sub 2\nosupersub  \i0 , otherwise it is FALSE. If both instructions are numbers, the comparison is made between numbers. If one is a string, the comparison is made between strings. A string is greater than another if it is sorted alphabetically after it. A string is equal to another if it is sorted alphabetically in the same order.\par
\i{\pntext\f9\'B7\tab}t_instruction\sub 1\nosupersub\i0   \b\f7\'a3\b0\f1  \i t_instruction\sub 2\nosupersub\i0 : The result is TRUE if \i t_instruction\sub 1\nosupersub\i0  is less than or equal to \i t_instruction\sub 2\nosupersub  \i0 , otherwise it will be FALSE. If both instructions are numbers, the comparison is made between the numbers. If one is a string, the comparison is made between strings. A string is less than or equal to another (respectively), if it is sorted alphabetically before it or if it is in the same order.\par
\i{\pntext\f9\'B7\tab}subfield\sub 1\nosupersub  \i0  \ul\b\f2\fs20 Precedes\ulnone\f1\fs24  \b0\i subfield\sub 2\nosupersub\i0 : The result is TRUE if \i subfield\sub 1\nosupersub\i0  appears before \i subfield\sub 2\nosupersub\i0  , otherwise it is FALSE. \i Subfield\i0  is a CD in which SS is mandatory. If the Tag of each subfield is not the same, the result will be FALSE.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
\i{\pntext\f9\'B7\tab}Example:\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li720\sa120\tx1134\f3\fs20\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\i0\f4\tab 700$a Precedes 700$b,\i\par
\i0{\pntext\f9\'B7\tab}\tab $a Precedes $c,\i\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i0\f1\fs24\par
{\pntext\f9\'B7\tab}700$a Precedes $c - \b WARNING\b0 : Here $c means $c of the current CDIn. If the current CDIn is in Tag 700, the comparison will work, if it is not, the result will be FALSE.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li720\sa120\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-479\li1134\sa120\i subfield\sub 1\nosupersub  \i0  \ul\b\f2\fs20 Follows\ulnone\f1\fs24  \b0\i subfield\sub 2\nosupersub  \i0 : The result is TRUE if \i subfield\sub 1\nosupersub\i0  appears after \i subfield\sub 2\nosupersub\i0  , otherwise it is FALSE. If the Tag of each subfield is not the same, the result is FALSE.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s5\li709\b\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120 Boolean function\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0 There is only one Boolean function in the software at present.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-425\li1134\sa120\ul\b\f2\fs20 Exists\ulnone\f1\fs24 (\b0  \i CD\i0  \b )\b0 : This is TRUE if \i CD\i0  exists in the input record, or FALSE if it does not exist. No test can be done on the existing \i CD\i0  of the output record; records can be created after the current evaluation. It can be used in combination with \lquote Not\rquote .\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
\i{\pntext\f9\'B7\tab}Example:\par
\i0{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\f4\fs20\tab 710$e | 712$c | If (($e Precedes $c) Or (Not Exists($c)) Then S\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\keepn\s4\li709\qj\b\f2 Loop instruction\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\b0\f1\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\lang2057 There is only one loop instruction. \par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li1134\sa120\f6\fs16 n\tab\b\f2\fs20 Redo\b0\f1\fs24 : This resolves the problem of (1 to n) conversion. It creates (or modifies) the current CDOut with the result of the preceding instructions. It increments \b\f2\fs20 no\b0\f1\fs24  and \b\f2\fs20 nso\b0\f1\fs24  or \b\f2\fs20 nto\b0\f1\fs24 . Then the following instructions create a pseudo-CDIn. If that is not empty, the rule will be re-evaluated to create (or modify) CDOut.\par
\i{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709 Example :\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\sa120\tx1134\i0\f3\fs20\par
{\pntext\f9\'B7\tab}\tab 041$a\tab |  101$a(\i no\i0 )\tab |  Sto(0); To(3); Redo; Mem(0); From(3)\i\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i0\f1\fs24\par
{\pntext\f9\'B7\tab}Suppose an input record contains the following 041 fields:\par
\i{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\i0\f4\fs20\tab 041.00 $afreengspa\i\par
\i0{\pntext\f9\'B7\tab}\tab 041.00 $ager\i\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i0\f1\fs24\par
{\pntext\f9\'B7\tab}When the software reaches the first 041, it creates a 101$a (\b\f2\fs20 no\b0\f1\fs24  is 1). In 101$a, it copies the first 3 characters of 041$a (\b\f2\fs20 To(3)\b0\f1\fs24 ). When it reaches \b\f2\fs20 Redo\b0\f1\fs24 , \b\deleted\f2\fs20  \deleted0 no\b0\f1\fs24  is incremented, and the output record contains:\par
\i{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\i0\f4\fs20\tab 101. $afre\i\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i0\f1\fs24\par
{\pntext\f9\'B7\tab}After \b\f2\fs20 Redo\b0\f1\fs24 , the software gets 041$a back (it has been stored with \b\f2\fs20 Sto(0)\b0\f1\fs24 , and restored with \b\f2\fs20 Mem(0)\b0\f1\fs24 ), skips the first 3 characters in it, and, returning to the beginning of the command line, stores the result by \b\f2\fs20 Sto(0)\b0\f1\fs24 . The pseudo-CDIn contains \lquote engspa\rquote : it is not empty. The rule is then re-evaluated with \lquote engspa\rquote  as the content of CDIn.\i\par
\i0{\pntext\f9\'B7\tab}The software then creates a new occurrence of $a (\b\f2\fs20 no\b0\f1\fs24  is 2), with the first three characters of of the pseudo-CDIn:\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\par
\f3\fs20{\pntext\f9\'B7\tab}\tab 101. $afre$aeng\par
\f1\fs24{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709 After Redo, the process is repeated with just \lquote spa\rquote  in the pseudo-CDIn (\b\f2\fs20 no\b0\f1\fs24  is 3).\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\f4\fs20\tab 101. $afre$aeng$aspa\i\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\i0\f1\fs24\par
{\pntext\f9\'B7\tab}By the end of the command line the software skips 3 characters and the pseudo-CDIn is empty. So, the next loop does nothing and the evaluation of the rule is finished.\par
\i{\pntext\f9\'B7\tab}\par
\i0{\pntext\f9\'B7\tab}When the software reaches the second 041$a, it works the same way and creates a third occurrence of $a in 101.\par
\i{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\i0\f4\fs20\tab 101. $afre$aeng$aspa$ager\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\keepn\s4\li709\qj\b\f2 Memory instructions\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\b0\f1\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\lang2057 It is necessary to be able to store intermediate results in complex rules. \par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}In the USEMARCON software, 100 memories are available. Four functions enable the manipulation of those memories :\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\ul\b\f2\fs20 Sto\ulnone\f1\fs24 (\b0\i m\b\i0 )\b0 : \i m \i0 is in 0 to 99. This function stores the current value of \b\f2\fs20 S\b0\f1\fs24  in the \i m\super\i0 th\nosupersub  memory. The old content of this memory is lost. Content of \b\f2\fs20 S\b0\f1\fs24  is not changed.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}Mem\ulnone\f1\fs24 (\b0\i m\b\i0 )\b0 : This function returns the content of \i m\super\i0 th\nosupersub  memory. If this memory has not been initialized, the function returns an empty string.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}Exc\ulnone\f1\fs24 (\b0\i m\b\i0 )\b0 : This function stores the current value of \b\f2\fs20 S\b0\f1\fs24  in the \i m\super\i0 th\nosupersub  memory, and returns the old content of this memory.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}Clr\ulnone\f1\fs24 (\b0\i m\b\i0 )\b0 : This function clears the content of \i m\super\i0 th\nosupersub  memory. Contents of \b\f2\fs20 S\b0\f1\fs24  are not changed.\par
\pard\li709 The contents of the memory are not cleared automatically, therefore it is possible to exchange information between rules and even between records.\par
\par
\pard\keepn\s4\li709\qj\b\f2 Conversion instructions\par
\pard\li720\lang1033\b0\f1\par
\pard\li709\lang2057 There are three types of instructions in USEMARCON: string, number and boolean.  A string can be converted to a number and a number to a string. Sometimes the conversion is made automatically, but sometimes it can be useful to have a conversion facility.\par
\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\ul\b\f2\fs20 Str\ulnone\f1\fs24 (\b0\i t_instruction\b\i0 )\b0 : The result of this instruction is a string. If \i t_instruction\i0  is a number, it is converted to a string. If \i t_instruction\i0  is a string, it stays a string.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}Val\ulnone\f1\fs24 (\b0\i t_instruction\b\i0 )\b0 : The result is a number. If \i t_instruction\i0  is a string containing only a number (like '123'), it is converted to a number. If the string contains anything else, it is converted to number 0. If \i t_instruction\i0  is a number it stays a number.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}Ordinal\ulnone\f1\fs24 (\b0\i t_instruction\b )\b0\i0 : The result is the ordinal number of the currently converted record. Its value is generally 1 for the first converted record, 2 for the second one, and so on. The first number is set in the Initialization parameters of the .INI file. \b NB! The OrdinalNumber setting is only updated in the .INI file if UpdateOrdinalNumber setting in the same section is TRUE\b0 . The update is unsafe in most environments where multiple conversions can be running simultaneously. If 20 records have been converted earlier, the first number can be set to 21 so that the current session correctly numbers the next batch of records. The command:\line\line\f4\fs20 001 | 001 | \lquote UNI\rquote  + Ordinal(7)\line\line\f1\fs24 then creates a record with record control number \lquote UNI0000021\rquote  i.e. 21 right-justified with zeroes, to 7 characters.\par
\pard\li709\par
\pard\keepn\s4\li709\qj\b\f2 Translation instructions\par
\pard\li720\lang1033\b0\f1\par
\pard\li709\lang2057 Translation instructions can be grouped with parentheses.\par
\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\b Simple translation instructions\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0 A simple translation instruction can be:\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-425\li1134\sa120\i t_instruction\sub 1\nosupersub   \b\i0 +\b0\i  t_instruction\sub 2\nosupersub\i0 : If both t_instructions are numbers, the result is the sum of those numbers. If at least one is a string, the result is a string containing \i t_instruction\sub 1\i0   \nosupersub merged with \i t_instruction\sub 2\nosupersub .\i0\par
\i{\pntext\f9\'B7\tab}t_instruction\sub 1\nosupersub   \b\i0 -\b0\i  t_instruction\sub 2\nosupersub\i0 : Both t_instructions must be numeric (if at least one is a string, an error appears), the result is the difference between \i t_instruction\sub 1\nosupersub   \i0 and\i  t_instruction\sub 2\nosupersub\i0 .\par
\i{\pntext\f9\'B7\tab}t_instruction\sub 1\nosupersub   \b\i0 *\b0\i  t_instruction\sub 2\nosupersub\i0 : Both t_instructions must be numeric (if at least one is a string, an error appears), the result is the product of \i t_instruction\sub 1\nosupersub   \i0 and\i  t_instruction\sub 2\nosupersub\i0 .\par
\i{\pntext\f9\'B7\tab}t_instruction\sub 1\nosupersub   \b\i0 /\b0\i  t_instruction\sub 2\nosupersub :\i0  Both t_instructions must be numeric (if at least one is a string, an error appears), the result is the integer division of \i t_instruction\sub 1\nosupersub   \i0 and\i  t_instruction\sub 2\nosupersub\i0 .\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s5\li709\b\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120 String functions\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\lang1033\b0 String functions are functions returning a string.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-425\li1134\sa120\lang2057\ul\b\f2\fs20 From\ulnone\f1\fs24 (\b0\i t_instruction\i0 [,\ul\b\f2\fs20 Strict\ulnone\b0\f1\fs24 ]\b )\b0 : If \i t_instruction\i0  is a number\i  p\i0 , the result of the function is the substring of \b\f2\fs20 S\b0\f1\fs24  from \i p\super\i0 th\nosupersub  position (first position is 1). If \i t_instruction \i0 is not a number, or is a number less than or equal to 0, or greater than \b\f2\fs20 S\b0\f1\fs24  length, this function returns an empty string. If \b\f2\fs20 Strict\b0\f1\fs24  is not specified and blank characters appear at the beginning of the result, they are skipped. If \b\f2\fs20 Strict\b0\f1\fs24  is specified, blank characters at the beginning of the result are kept.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}To\ulnone\f1\fs24 (\b0\i t_instruction\i0 [,\ul\b\f2\fs20 Strict\ulnone\b0\f1\fs24 ]\b )\b0 : If \i t_instruction\i0  is a number\i  p\i0 , the result of the function is the substring of \b\f2\fs20 S\b0\f1\fs24  truncated in \i p\super\i0 th\nosupersub  position (first position is 1). If \i t_instruction \i0 is not a number, or is a number less than or equal to 0, or greater than \b\f2\fs20 S\b0\f1\fs24  length, this function returns an empty string. If \b\f2\fs20 Strict\b0\f1\fs24  is not specified and blank characters appear at the end of the result, they are truncated. If \b\f2\fs20 Strict\b0\f1\fs24  is specified, blank characters at the end of the result are kept.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}Between\ulnone\f1\fs24 (\b0\i t_instruction\sub 1  \nosupersub , t_instruction\sub 2\i0  \nosupersub  [,\ul\b\f2\fs20 Strict\ulnone\b0\f1\fs24 ]\b )\b0 : Both \i t_instructions\i0  must be a number. If at least one is not, the result is an empty string. If both are a number \i p\sub 1\nosupersub\i0  and \i p\sub 2\nosupersub\i0  the result is a substring of\i  \b\i0\f2\fs20 S\b0\f1\fs24  from \i p\sub 1\super\i0 th\nosupersub  position to \i p\sub 2\super\i0 th\nosupersub  position. If \b\f2\fs20 Strict\b0\f1\fs24  is not specified any blank characters appearing at the boundaries of the result are deleted. If \b\f2\fs20 Strict\b0\f1\fs24  is specified, any blank characters are kept.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}Next\ulnone\f1\fs24 (\b0\i subfield\sub 1\nosupersub  \i0  [, \i subfield\sub 2\nosupersub  \i0 ][,\ul\b\f2\fs20 Strict\ulnone\b0\f1\fs24 ]\b )\b0 :\b  \b0\i subfield\i0  is a CD in which SS is mandatory. Each subfield is assumed to be in CDIn. If only \i subfield\sub 1\nosupersub\i0  is specified, this function will return the first subfield following current CDIn, identified by \i subfield\sub 1\nosupersub\i0 , until the end of the field. If both \i subfield\sub 1\nosupersub  \i0  and \i subfield\sub 2\nosupersub\i0  are specified, the function will return the first subfield following current CDIn, identified by \i subfield\sub 1\nosupersub\i0 , until the subfield identified by \i subfield\sub 2\nosupersub\i0 . If \b\f2\fs20 Strict\b0\f1\fs24  is not specified any blank characters appearing at the boundaries of the result are deleted. If \b\f2\fs20 Strict\b0\f1\fs24  is specified, any blank characters are kept. If the subfield is not found, the function returns an empty string.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}Last\ulnone\f1\fs24 (\b0\i subfield\sub 1\nosupersub  \i0  [, \i subfield\sub 2\nosupersub  \i0 ][,\ul\b\f2\fs20 Strict\ulnone\b0\f1\fs24 ]\b )\b0 : Each subfield is assumed to be in CDIn. If only \i subfield\sub 1\nosupersub\i0  is specified, this function will return the first subfield preceding current CDIn, identified by \i subfield\sub 1\nosupersub\i0 , until the beginning of the field. If both \i subfield\sub 1\nosupersub  \i0 and \i subfield\sub 2\nosupersub\i0  are specified, the function will return the first subfield preceding current CDIn, identified by \i subfield\sub 1\nosupersub\i0 , until the subfield identified by \i subfield\sub 2\nosupersub\i0  . If \b\f2\fs20 Strict\b0\f1\fs24  is not specified any blank characters appearing at boundaries of the result are deleted. If \b\f2\fs20 Strict\b0\f1\fs24  is specified, any blank characters are kept. If the subfield is not found, the function returns an empty string.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}Delete\ulnone\f1\fs24 (\b0\i t_instruction\i0  [, \ul\b\f2\fs20 At Beginning\ulnone\b0 |\ul\b At Ending\ulnone\b0 |\ul\b At Boundaries\ulnone\b0 ] [,\ul\b Strict\ulnone\b0\f1\fs24 ]\b )\b0 : This function deletes any occurrence of the string \i t_instruction\i0  from \b\f2\fs20 S\b0\f1\fs24 . If \i t_instruction\i0  is a number, it is converted into a string. If \b\f2\fs20 At Beginning\b0\f1\fs24  is specified, \i t_instruction\i0  is deleted in \b\f2\fs20 S\b0\f1\fs24 , only if it is at the beginning of \b\f2\fs20 S\b0\f1\fs24 . If \b\f2\fs20 At Ending\f1\fs24  \b0 is specified, it is only deleted if it appears at the end of \b\f2\fs20 S\b0\f1\fs24 . If \b\f2\fs20 At Boundaries\b0\f1\fs24  is specified, it is only deleted if it appears at the boundaries of \b\f2\fs20 S\b0\f1\fs24 . If \b\f2\fs20 Strict\b0\f1\fs24  is not specified any blank characters appearing after/before the deleted characters of the result are deleted. If \b\f2\fs20 Strict\b0\f1\fs24  is specified, any blank characters are kept.\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}Table\ulnone\f1\fs24 (\lquote\b0\i file_name\rquote  \b\i0 )\b0 : \i file_name\i0  is the name of a file (in the rule file directory) enclosed within single quotation marks i.e.\lquote filename.tbl\rquote , containing the description of a table of coded data. The name prefix must not exceed 8 characters in length (because of the DOS environment) and must have the .tbl extension. The function should return \b\f2\fs20 S\b0\f1\fs24  converted as described in the table. If the conversion is not possible the function returns an empty string and an error is appended to the log file.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li1134\i\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709 Example:\par
\i0\f4\fs20{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\tab 008/16-17 | 102$a | Table(\lquote Uk3166b.tbl\rquote ) // Country codes table\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li1134\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-425\li1134\sa120\ul\b\f2\fs20 Sort\ulnone\f1\fs24 (\b0\lquote\i string\rquote\b\i0 )\b0 : \i string \i0 is a string enclosed within single quotation marks where each character is a subfield identifier. This function can only appear in a rule linked with a complete CDOut. It enables the subfields of CDOut to be sorted when the record is finished.\i\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709 Example:\par
\i0{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1134\f3\fs20\tab 010\tab | 022(n)\tab | Sort(\lquote abcdz\rquote )\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-425\li1134\sa120\f1\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120\b Number functions\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0 Number functions are functions returning a number.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent283{\pntxtb\'B7}}\fi-425\li1134\sa120\ul\b\f2\fs20 BFirst\ulnone\f1\fs24 (\b0\i t_instruction\i0  |\ul\b\f2\fs20 Number\ulnone\b0\f1\fs24 |\ul\b\f2\fs20 String\ulnone\f1\fs24 )\b0 : If \i t_instruction \i0 is specified, this function returns the position of the beginning of the first occurrence of \i t_instruction\i0  in \b\f2\fs20 S\b0\f1\fs24 . If \i t_instruction\i0  is a number it is converted into a string. If \b Number\b0  is specified, the function returns the position of the beginning of the first number in \b\f2\fs20 S\b0\f1\fs24 . If \b\f2\fs20 String\b0\f1\fs24  is specified, the function returns the position of the beginning of the first string in \b\f2\fs20 S\b0\f1\fs24 .\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}EFirst\ulnone\f1\fs24 (\b0\i t_instruction\b\i0  \b0 |\ul\b\f2\fs20 Number\ulnone\b0\f1\fs24 |\ul\b\f2\fs20 String\ulnone\f1\fs24 )\b0 : If \i t_instruction \i0 is specified, this function returns the position of the end of the first occurrence of \i t_instruction\i0  in \b\f2\fs20 S\b0\f1\fs24 . If \i t_instruction\i0  is a number it is converted into a string. If \b\f2\fs20 Number\b0\f1\fs24  is specified, the function returns the position of the end of the first number in \b\f2\fs20 S\b0\f1\fs24 . If \b\f2\fs20 String\b0\f1\fs24  is specified, the function returns the position of the end of the first string in \b\f2\fs20 S\b0\f1\fs24 .\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}BLast\ulnone\f1\fs24 (\b0\i t_instruction\i0  |\ul\b\f2\fs20 Number\ulnone\b0\f1\fs24 |\ul\b\f2\fs20 String\ulnone\f1\fs24 )\b0 : If \i t_instruction \i0 is specified, this function returns the position of the beginning of the last occurrence of \i t_instruction\i0  in \b\f2\fs20 S\b0\f1\fs24 . If \i t_instruction\i0  is a number it is converted into a string. If \b\f2\fs20 Number\b0\f1\fs24  is specified, the function returns the position of the beginning of the last number in\b  \f2\fs20 S\b0\f1\fs24 . If \b\f2\fs20 String\b0\f1\fs24  is specified, the function returns the position of the beginning of the last string in \b\f2\fs20 S\b0\f1\fs24 .\par
\ul\b\f2\fs20{\pntext\f9\'B7\tab}ELast\ulnone\f1\fs24 (\b0\i t_instruction\b\i0  \b0 |\ul\b\f2\fs20 Number\ulnone\b0\f1\fs24 |\ul\b\f2\fs20 String\ulnone\f1\fs24 )\b0 : If \i t_instruction \i0 is specified, this function returns the position of the end of the last occurrence of \i t_instruction\i0  in \b\f2\fs20 S\b0\f1\fs24 . If \i t_instruction\i0  is a number it is converted into a string. If \b\f2\fs20 Number\b0\f1\fs24  is specified, the function returns the position of the end of the last number in \b\f2\fs20 S\b0\f1\fs24 . If \b\f2\fs20 String\b0\f1\fs24  is specified, the function returns the position of the end of the last string in \b\f2\fs20 S\b0\f1\fs24 .\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\fi-720\li720\sb120\b\f2\fs28 Comments and Multi-line Rules\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\b0\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\f1 Comments can appear on a separate line, or at the end of a line, and are preceded by a double slash \b //\b0 . It is recommended that general comments are placed before the rule they refer to.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Rules can be written on multiple lines: the first line contains CDIn, then space, pipe (|), space, then CDOut, then space, pipe (|), space, then the beginning of the rule. When rules are on multiple lines the last character of all but the last line must be a semicolon.\par
{\pntext\f9\'B7\tab}\par
\i{\pntext\f9\'B7\tab}Examples\i0 :\par
{\pntext\f9\'B7\tab}\par
\f3\fs20{\pntext\f9\'B7\tab}// Bibliography & index note\f1\fs24\par
\f3\fs20{\pntext\f9\'B7\tab}504   \tab | 320     I1      | \par
{\pntext\f9\'B7\tab}504   \tab | 320     I2      | \par
{\pntext\f9\'B7\tab}504$a \tab | 320     $a      | \par
{\pntext\f9\'B7\tab}// Contents note\par
{\pntext\f9\'B7\tab}505   \tab | 327     I1      | \par
{\pntext\f9\'B7\tab}505   \tab | 327     I2      |\par
{\pntext\f9\'B7\tab}505$a \tab | 327     $a      | \par
{\pntext\f9\'B7\tab}// Accompanying material note\par
{\pntext\f9\'B7\tab}525   \tab | 307     I1      | \par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}008/16-17 | 102$a |Table(\lquote Uk3166b.tbl\rquote ) // Country codes table\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}041$a | 101$a(no) | Sto(0); to(3); Redo;\par
{\pntext\f9\'B7\tab}\tab\tab\tab\tab Mem(0): From(3)\par
\b\f1\fs24{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s1\sb240\tx709\cf1\caps\f2\fs28 3.\tab ERROR MESSAGES\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\tx1418\tx2127\cf0\lang1033\b0\caps0\f1\fs24\par
{\pntext\f9\'B7\tab}\par
\pard\brdrb\brdrs\brdrw30\brsp20 {\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1418\tx2127\b In this Chapter\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\tx1418\tx2127\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709\tx1418\tx2127 Format\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\fi-360\li720\tx1418\tx2127\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709\tx1418\tx2127 Error Definitions\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\tx1134\tx1418\tx2127\b0\tab Error Messages\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\s2\sb120\tx1418\tx2127\lang2057\b\f2\fs28 Format\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li720\tx1418\tx2127\fs24\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\b0\f1 System messages describing errors detected during format checking or data conversion are stored by default in an ASCII text file in the relevant sub-directory for the conversion; this is known as the Error Log File. In common with the other system files, the path and name of the Error Log File may be changed in the Initialization Parameters of the .INI File using a text editor such as MS Windows Notepad. Beginning from version 1.3 the file name can be left empty so that an error log is not created.\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlcont\pnf9\pnindent0{\pntxtb\'B7}}\li709\tx1418\tx2127\par
{\pntext\f9\'B7\tab}For each error, one line is logged in the report file; this enables easier filtering of the report file.\par
{\pntext\f9\'B7\tab}\par
{\pntext\f9\'B7\tab}Each line begins with either WARNING, ERROR or FATAL.\par
{\pntext\f9\'B7\tab}\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li1134\sa120 WARNING will not stop the program\par
{\pntext\f9\'B7\tab}ERROR gives you the option to stop in Interactive mode but will not stop in Batch mode\par
{\pntext\f9\'B7\tab}FATAL errors will not allow the software to proceed further.\par
\pard\li709\tx1418\tx2127\par
The rest of the line consists of:\par
\par
\lquote (\rquote , <coded error number>, \lquote )\rquote , <the error description>, <a description of the problem>\par
\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \fi-22\li720\sa120\tx1418\tx2127\f3\fs20 Line ::= <kind of error> (<coded number>) - <error message> : <parameters>\line <kind of error> ::= \lquote FATAL\rquote\tab -\tab 'ERROR'\tab -\tab 'WARNING'\line <coded number> ::= \i number\line\i0 <error message> ::= \i words\i0\line <parameters> ::= \i words\i0\par
\pard\li709\tx1418\tx2127\b\par
\pard\s2\fi-720\li720\sb120\tx1418\tx2127\f2\fs28 Error Definitions\par
\pard\li709\tx1418\tx2127\b0\f1\fs24\par
\pard\li709 Errors are numbered 000-9999. The first digit describes the part of the process in which the error appears:\par
\par
\pard\li709\tx1701 0xxx\tab The error is due to bad interface use.\par
1xxx\tab The error appears during reading of a MARC file, i.e. a format problem.\par
2xxx\tab The error appears during MARC checking in input (in comparison with the \tab input checking table).\par
3xxx\tab The error appears during character translation.\par
4xxx\tab The error appears during coded data translation.\par
5xxx\tab The error appears during rule analysis or conversion.\par
7xxx\tab The error appears during checking of the MARC output.\par
8xxx\tab The error appears during writing of the MARC file.\par
9xxx\tab Other internal errors.\par
\pard\li720\tx1418\tx2127\lang1033\i Examples:\par
\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \li709\ri720\tx1418\tx2127\lang2057\i0\f3\fs20 WARNING(2001) - Invalid input format checking rule ( item expected ) \'85 \line ERROR(3001) - Character not transcoded (unable to find it in transco table) : 0x90 in \'85\line FATAL(7011)\kerning16  -....\kerning0\par
\pard\keepn\s3\sb240\sa60\tx1418\tx2127\b\f2\fs24 Error Messages\par
\pard\li720\qj\tx1418\tx2127\b0\par
\pard\li709\tx1418\tx2127\f1 A complete list of error messages used by the USEMARCON software is shown below.\par
\pard\li720\tx1418\tx2127\f2\par
\pard\li709\sa120\tx1418\tx2127\f1  501\tab -\tab Invalid rule pattern to search\par
 502\tab -\tab No more patterns found\par
 503\tab -\tab Maximum errors to be encountered has been reached\par
 504\tab -\tab The last record to be converted has been reached\par
 505\tab -\tab Type or browse a MARC file to open before\par
 506\tab -\tab Pattern not found\par
 507\tab -\tab Unable to evaluate an empty rule\par
 508\tab -\tab No defined box to search.  Please point to the box to search in \par
 509\tab -\tab No search is available on this selection. Please select another one\par
 510\tab -\tab Comment is too long and will be truncated\par
 511\tab -\tab Line is too long and will be truncated\par
 512\tab -\tab Unknown input format comment\par
 513\tab -\tab Unknown output format comment\par
 514\tab -\tab Please, select RI boundaries\par
 515\tab -\tab Please, select No boundaries\par
 516\tab -\tab Invalid RI boundaries\par
 517\tab -\tab Invalid No boundaries\par
 590\tab -\tab Specified file does not exist ( please check path )\par
1001\tab -\tab Unable to reset a writing mode opened file\par
1002\tab -\tab Invalid SCW encountered when attempting to read a MARC notice\par
1003\tab -\tab Unable to go further in MARC file reading\par
1004\tab -\tab Invalid length encountered when attempting to read a MARC notice\par
1005\tab -\tab Unable to go further in MARC file writing\par
1006\tab -\tab Unable to flush the MARC output file\par
1007\tab -\tab Invalid MARC data location address\par
1009\tab -\tab Unable to set the content of the field\par
1101\tab -\tab Invalid MARC tag\par
1102\tab -\tab Invalid MARC indicators\par
1202\tab -\tab Unable to set the label\par
1501\tab -\tab MARC buffer allocation failure\par
1502\tab -\tab Error encountered when attempting to read the MARC file\par
2001\tab -\tab Invalid input format checking rule ( item expected )\par
2002\tab -\tab Invalid or absent tag in input format checking rule\par
2003\tab -\tab Format checking rule redundancy in input format checking file\par
2004\tab -\tab Invalid or absent first indicators list in input format checking rule\par
2005\tab -\tab Invalid or absent second indicators list in input format checking rule\par
2006\tab -\tab Invalid or absent subfield in input format checking rule\par
2101\tab -\tab Not repeatable but redundant field found in input record\par
2102\tab -\tab Invalid first indicator found in input record\par
2103\tab -\tab Invalid second indicator found in input record \par
2104\tab -\tab Invalid or redundant subfield found in input record\par
2105\tab -\tab Unexpected field found in input record\par
2106\tab -\tab Mandatory field expected in input record\par
2107\tab -\tab Mandatory subfield expected in input record\par
2108\tab -\tab Field without any subfield found in input record\par
2501\tab -\tab TControlField allocation failure when attempting to load a new input \line\tab\tab format checking rule\par
2502\tab -\tab TCtrlSubfield allocation failure when attempting to load a new input \line\tab\tab format checking rule\par
2503\tab -\tab First indicators list allocation failure when attempting to load a new \line\tab\tab input format checking rule\par
2504\tab -\tab Second indicators list allocation failure when attempting to load a new \line\tab\tab input format checking rule\par
3000\tab -\tab Memory allocation error\par
3001\tab -\tab Character not transcoded (unable to find it in transco table)\par
4001\tab -\tab Coded data not loaded\par
5000\tab -\tab Memory allocation error\par
5001\tab -\tab The selected rule file does not exist \par
5002\tab -\tab Unable to load the invalid rule\par
5003\tab -\tab Unable to find the label in any CD\par
5004\tab -\tab Only one indicator has been found\par
5005\tab -\tab Content of indicator is too long (>1)\par
5100\tab -\tab Rule analysis error\par
5101\tab -\tab A CDOut like TTT(no)... has an invalid subfield occurrence number\line\tab\tab (no, nso or nto)\par
5102\tab -\tab A CDOut like ...SS(no) has an invalid field occurrence number (no, nso \line\tab\tab or nto)\par
5103\tab -\tab A CDOut like TTT(nto)... has an invalid subfield occurrence number \line\tab\tab (no, nso or nto)\par
5104\tab -\tab A CDOut like ...SS(nso) has an invalid field occurrence number (no,\line\tab\tab nso or nto)\par
5200\tab -\tab Expected CD tag\par
5201\tab -\tab Invalid CD tag ( three characters are required )\par
5202\tab -\tab Invalid CD tag ( only numerics or letters are allowed )\par
5203\tab -\tab Invalid CD subfield ( only two characters required )\par
5204\tab -\tab Invalid CD subfield ( only '1' or '2' is expected behind a 'I' subfield )\par
5205\tab -\tab Invalid CD subfield ( only numerics or letters are allowed behind a '$' \line\tab\tab subfield )\par
5206\tab -\tab Invalid CD subfield ( only I1, I2 or $? are allowed )\par
5207\tab -\tab Invalid position settings\par
5208\tab -\tab Invalid CD tag occurrence number\par
5209\tab -\tab Invalid CD subfield occurrence number\par
5210\tab -\tab Misplaced rule : please insert this rule before the previous one\par
5211\tab -\tab Misplaced rule : please insert this rule after the next one\par
5212\tab -\tab Invalid character found in rule\par
5301\tab -\tab Invalid output occurrence number 'no'\par
5302\tab -\tab Invalid output tag occurrence number 'nto'\par
5303\tab -\tab Invalid output sub occurrence number 'nso'  \par
5304\tab -\tab Invalid input occurrence number 'n'\par
5305\tab -\tab Invalid input tag occurrence number 'nt'\par
5306\tab -\tab Invalid input sub occurrence number 'ns'\par
5307\tab -\tab Unknown main input CD ( please type or load it before evaluating )\par
5308\tab -\tab Unknown old output CD ( please type it before evaluating )\par
5309\tab -\tab Unknown other input CD ( please, type it before evaluating )\par
5501\tab -\tab TRule allocation failure when attempting to analyse the rule\par
5502\tab -\tab Unable to allocate space for setting text of analysed rule \par
5503\tab -\tab Unable to allocate space for setting comment of analysed rule\par
5504\tab -\tab TCD allocation failure when attempting to analyse the rule \par
5505\tab -\tab TCDLib allocation failure when attempting to deal with other input \line\tab\tab CDs\par
5506\tab -\tab Buffer allocation failure when attempting to split the rule\par
5507\tab -\tab TCD allocation failure when attempting to load CD from MARC \line\tab\tab record \par
7001\tab -\tab Invalid output format checking rule ( item expected )\par
7002\tab -\tab Invalid or absent tag in output format checking rule\par
7003\tab -\tab Format checking rule redundancy in output format checking file\par
7004\tab -\tab Invalid or absent first indicators list in output format checking rule\par
7005\tab -\tab Invalid or absent second indicators list in output format checking rule\par
7006\tab -\tab Invalid or absent sub in output format checking rule\par
7101\tab -\tab Redundant field (not repeatable) found in output record\par
7102\tab -\tab Invalid first indicator found in output record\par
7103\tab -\tab Invalid second indicator found in output record \par
7104\tab -\tab Invalid or redundant subfield found in output record\par
7105\tab -\tab Unexpected field found in output record\par
7106\tab -\tab Mandatory field expected in output record\par
7107\tab -\tab Mandatory subfield expected in output record\par
7108\tab -\tab Field without any subfield found in output record\par
7501\tab -\tab TControlField allocation failure when attempting to load a new output \line\tab\tab format checking rule\par
7502\tab -\tab TCtrlSubfield allocation failure when attempting to load a new output \line\tab\tab format checking rule\par
7503\tab -\tab First indicators list allocation failure when attempting to load a new\line\tab\tab output format checking rule\par
504\tab -\tab Second indicators list allocation failure when attempting to load a new\line\tab\tab output format checking rule\par
8001\tab -\tab Unable to delete the Error Log File\par
9001\tab -\tab TRuleFile allocation failure when attempting to load the Rule File \par
9011\tab -\tab TCheckFile allocation failure when attempting to load the Input Check \line\tab\tab File \par
9012\tab -\tab TCheckFile allocation failure when attempting to load the Output \line\tab\tab Check File \par
9013\tab -\tab TTransFile allocation failure when attempting to load the Translation \line\tab\tab Character Table \par
9021\tab -\tab TMARCFile allocation failure when attempting to open the Input \line\tab\tab MARC File \par
9022\tab -\tab TMARCFile allocation failure when attempting to open the Output \line\tab\tab MARC File \par
9031\tab -\tab TMARCRecord allocation failure when attempting to load the Input \line\tab\tab MARC File \par
9032\tab -\tab TMARCRecord allocation failure when attempting to load the Output \line\tab\tab MARC File \par
9041\tab -\tab TMARCField allocation failure when attempting to load the notice into \line\tab\tab memory fields\par
9101\tab -\tab TRuleDoc not created\par
9102\tab -\tab TMARCDoc not created\par
9103\tab -\tab TDummyDoc not created\par
9104\tab -\tab TTransDoc not created  \par
9105\tab -\tab TCheckDoc not created \par
9201\tab -\tab TCD allocation failure when attempting to search for another CD\par
9202\tab -\tab Label is mandatory and has not been converted\par
9203\tab -\tab TMARCField allocation failure when attempting to merge CDs into\line\tab\tab fields\par
9301\tab -\tab TCDLib allocation failure when attempting to split a field into CDs\par
9401\tab -\tab Find SLIST allocation failure when attempting to memorise precedent \line\tab\tab find/replace request\par
9402\tab -\tab Replace SLIST allocation failure when attempting to memorise \line\tab\tab precedent find/replace request\par
9403\tab -\tab TRule allocation failure when attempting to search/replace items\par
9404\tab -\tab TCD allocation failure when attempting to search/replace items\par
9501\tab -\tab Unable to open the ASCII mode file\par
9502\tab -\tab Unable to open the binary mode file\par
9503\tab -\tab Unable to delete the file\par
9504\tab -\tab Unable to get the next line of a binary file \par
9505\tab -\tab Invalid #include 'file' directive found in file\par
9506\tab -\tab Unable to read two first lines of an ASCII file\par
9700\tab -\tab Two identical CDs found in a record !\par
9703\tab -\tab Invalid tag field to add to the list of tags without indicator\par
9704\tab -\tab Unable to add the selected tag to the list of tags without indicator\par
9705\tab -\tab Unable to remove the selected tag from the list of tags without indicator\par
9706\tab -\tab (No) is not filled\par
9800\tab -\tab Unable to open the help file \b  \b0 usemarco.csc/hlp\b  \b0\par
9999\tab -\tab Unknown error\par
\pard\s1\sb240\tx709\cf1\b\caps\f2\fs28\page 4.\tab USING USEMARCON SOFTWARE IN YOUR APPLICATION\par
\pard\li720\tx1418\tx2127\cf0\lang1033\b0\caps0\f1\fs24\par
\par
\pard\brdrb\brdrs\brdrw30\brsp20 \li709\tx1418\tx2127\b In this Chapter\par
\pard\li720\tx1418\tx2127\par
\pard{\pntext\f9\'B7\tab}{\*\pn\pnlvlblt\pnf9\pnindent360{\pntxtb\'B7}}\fi-425\li709\tx1418\tx2127 Programming with USEMARCON (revised in version 1.3)\par
\pard\fi-360\li720\tx1418\tx2127\par
\pard\tx1418\tx2127\b0\page\b Programming with USEMARCON\b0\par
\par
\pard\b The CDetails object\par
\b0\par
The CDetails object is used to control certain operations of the program. It is declared in objectlist.h. Include this file in another project and link with the appropriate library such as usemarcon_library.lib or libusemarcon.a. \par
\par
\i\par
CDetails.SetInteractive(value);\par
\i0\par
Set value to true and the program will read its input from the defined file in the specified .ini control file.\par
\par
Set value to false and the program will expect input to be passed on the fly\par
\par
\i\par
 CDetails.SetIniFileName(filename);\par
\i0\par
Defines the location of the .ini file where parameters are defined. The path can be an absolute path or relative to the current working directory.\par
\par
\i\par
CDetails.SetMarcRecord(pcRecord, iLength);\par
\i0  \par
Used only in the on the fly conversion - pcRecord is a string containing a MARC record to be converted in ISO 2709 format. iLength contains the length of the string.\par
\par
\i CDetails.SetForceVerbose(value);\par
\i0\par
Set value to true and the program will print out warning and error messages to the screen in addition to the error log when running the command line version.\par
\par
\i CDetails.SetDisableCharacterConversion(value);\par
\i0\par
Set value to true and the program will not do character set conversion. Default is false.\par
\par
\i CDetails.Start();\par
\i0\par
Instructs the conversion to convert the input record.\par
\par
\par
\i CDetails.GetMarcRecord(pcRecord, iLength);\par
\i0\par
Used only in the on the fly conversion - retrieves the converted record to pcRecord and its length in iLength. The output record is in ISO 2709 format. NB: the string is allocated and must be freed separately.\par
\par
\par
\i CDetails.GetLastErrorMessage(msg);\par
\par
\i0 Used to retrieve the last error message. This can be used to display error messages in the controlling program.\par
\i\par
\i0\par
NB: as of version 1.3 the input file does NOT need to be specified in the .ini file when the interactive mode is not on.\par
\pard\tx1418\tx2127\par
\pard\s1\sb240\cf1\lang2057\b\caps\f2\fs28\page Appendix 1\par
\pard\cf0\lang1033\b0\caps0\f1\fs24\par
\pard\s2\sb120\lang2057\b\f2\fs28 UNIMARC to UKMARC Conversion Rules File\par
\pard\lang1033\b0\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 UNIMARC\par
UKMARC - Draft -\f1\par
\par
\f4 // Record label pos 1-5 (rec length) generated nothing to do\par
000   /6-8/\tab | 000        /6-8/\tab | \par
000   /9-10/\tab | 000        /9-10/\tab | 'bb'\par
// nothing to do\par
000   /12-17/\tab | 000        /12-17/\tab | S\par
000   /18/\tab | 000        /18/\tab | 1\par
000   /19-20/\tab | 000        /19-20/\tab | 'bb'\par
// nothing to do\par
000   /21-24/\tab | 000        /21-24/\tab | S\par
// Transfers 001 into 091 (Previous control  no.) Target system generates new 001\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \tx851\tx1701\tx2268 001\tab | 001\tab\tab | 'UKM'+Ordinal(7)\par
001\tab | 091\tab I1\tab | 0\par
001\tab | 091\tab I2\tab | 0\par
001\tab | 091     $a\tab | \par
001\tab | 005\tab\tab\tab | Year+Month+Day+Hour+Minute+Second+'.0'\par
// When output record will be built, this field will be sorted Each 010 creates a new 021\par
// 010\tab | 021(n)\tab\tab | Sort('abcdz') //Not necessary ?\par
// Indicator 1 is 1\par
010\tab | 021(n)\tab I1\tab | 1\par
// Indicator 2 is 0\par
010\tab | 021(n)\tab I2\tab | 0\par
// nothing to do\par
010$a \tab | 021(n)  $a\tab | Delete('-')\par
// nothing to do\par
010$b \tab | 021(n)  $c\tab |\par
// nothing to do\par
010$d \tab | 021(n)  $d\tab |\par
// nothing to do\par
010$z \tab | 021(n)  $z\tab |\par
011   \tab | 022        | Sort(abz)\par
// Only the first 011 will be converted\par
011\tab | 022\tab I1\tab | If (n=1) Then 0\par
011\tab | 022\tab I2\tab | If (n=1) Then 0\par
011$a \tab | 022     $a \tab | If (n=1) Then Delete('-')\par
011$d \tab | 350\tab I1\tab | 0\par
011$d \tab | 350\tab I2\tab | 0\par
011$d \tab | 350     $a \tab | \par
// Indicator 1 is 0\par
020\tab | 015(n)\tab I1 \tab | 0\par
// Indicator 2 is 0\par
020\tab | 015(n)\tab I2\tab | 0\par
020$b \tab | 015     $a\tab | \par
// Indicator 1 and\par
071\tab | 538(n)\tab I1\tab | 0\par
// Indicator 2 are 0\par
071\tab | 538(n)\tab I2 \tab | 0\par
071I1 \tab | 538(n)  $a \tab | Table(538); If Exists($b) Then S+':b' +$b Else S\par
071$a \tab | 538(n)  $b\tab | \par
// Indicator 1 and\par
100\tab | 008\tab I1\tab | ''\par
// Indicator 2 are empty\par
100\tab | 008 \tab I2 \tab | ''\par
// Skip century\par
100$a /1-8/\tab | 008        /1-6/\tab | From(3 )\par
// nothing to do as described in ANNEX B.1\par
100$a /9/\tab | 008 /7/ | Table ('date.tbl')\par
100$a /10-17/\tab | 008 /8-15/ |\par
100$a /18/\tab | 008 /23/ | Table ('aud.tbl')\par
100$a /21/\tab | 008 /29/ |\par
101\tab | 008\tab I1\tab | ''\par
101\tab | 008\tab I2\tab | ''\par
// First $a goes in 008\par
101$a \tab | 008 /36-38/\tab | If (n=1) Then S\par
// 041 is only created\par
101$a \tab | 041 \tab |1\tab | If (n>1) Then 0\par
// when more than one $a\par
101$a \tab | 041\tab I2\tab | If (n>1) Then 0\par
// Two first 101$a in 041$a\par
101$a \tab | 041     $a \tab | If (n=2) Then 101$a(1)+S\par
// any subsequent $a merged in 041$a\par
101$a \tab | 041     $a\tab | + If (n>2) Then S\par
// additional subfields added since publication of UK MARC manual It is impossible to tell from UNI 101 whether or not a translation has or has not the original text (if has, I1=0, if has not, I1=1). ANY conversion must therefore be flawed.\par
101$j \tab | 041     $b      \tab |\par
// First $a in 008\par
102$a \tab | 008        /16-18/ | Table ('iso2uk.tbl')\par
102$a \tab | 044\tab I1\tab | If (n>1) Then 0\par
102$a \tab | 044\tab I2\tab | If (n>1) Then 0\par
102$a \tab | 044\tab $a \tab | If (n=2) Then 102$a(1)+S\par
102$a \tab | 044\tab $a \tab | + If (n>2) Then S\par
105$a /1-4/\tab | 008        /19-22/ | Table ('illustr.tbl')\par
105$a /5-8/\tab | 008        /25-28/ | Table ('frm.tbl')\par
105$a /9/\tab | 008        /30/ |\par
105$a /10/\tab | 008        /31/ |\par
105$a /11/\tab | 008        /32/ |\par
105$a /12/\tab | 008        /34/ | Table ('lit.tbl')\par
105$a /13/\tab | 008        /35/ | Table ('biog.tbl')\par
106$a /1-4/\tab | 008        /24/ | Table ('gmd.tbl')\par
110$a /1/\tab\tab | 008        /39/ | Table ('ser.tbl')\par
110$a /3/\tab\tab | 008        /34/ | Table ('frm.tbl')\par
110$a /7/\tab | 008        /30/ |\par
// Each 123 creates a 034\par
123I1 \tab | 034(n)\tab I1 \tab | 0\par
123I2 \tab | 034(n)\tab I2 \tab | 0\par
123$a \tab | 034(n)  $a \tab | \par
// Each $b or $c of each 123 goes in the\par
123$b \tab | 034     $b  \tab | \par
// corresponding $b or $c of each 034\par
123$c \tab | 034     $c  \tab | \par
200I1 \tab | 245\tab I1 \tab | If (S=0) Then S\par
200I1 \tab | 245\tab I1 \tab | If (S=1) Then S; If (Exists(@700) Or Exists(@710) Or \tab\tab\tab Exists(@720) Or Exists(@101) Or Exists (@102) Or \tab\tab\tab\tab Exists(@105) Or Exists(@106)) Then 1\par
200I1 \tab | 245\tab I1 \tab | If (S=1 And Not(Exists(@700) Or Exists(@710) Or Exists \tab\tab\tab (@720))) Then 3\par
200$a \tab | 245\tab I2 \tab | If (n=1) Then Sto(0); Bfirst('\\88'); Sto(1);Mem(0); \tab\tab\tab Bfirst('\\89'); S-Mem(1);S-1;if (S<0) then 0 Else S\par
200$a \tab | 245     $a\tab | If (n=1) Then Delete('\\88'); Delete('\\89');\par
200$a \tab | 245     $i\tab | If (n>1) Then S\par
200$b \tab | 245     $z\tab | \par
200$c \tab | 245     $j \tab | \par
200$d \tab | 245     $k\tab | \par
// First $e created\par
200$f \tab | 245     $e\tab | \par
// Subsequent $es created Searches next $i until next $h If found merges it with $h+', ' else only $h in $l\par
200$g \tab | 245     $e \tab | \par
// Searches last $h until last $i If not found then create a new $l containing only $i If found there is nothing to do, the precedant rule has already create the subfield\par
200$h \tab | 245     $l (no) \tab | sto(0); Next($i,$h);If (S='') Then Mem(0) \tab\tab\tab\tab\tab Else Mem(0)+', '+S\par
200$i \tab | 245     $l (no) \tab | sto(0); Last($h,$i);If (S='') Then Mem(0)\par
200$h \tab | 248\tab I1 \tab | ns\par
200$h \tab | 248\tab I2\tab | 0\par
// first h, I or hi combination has 248 I1=1, second has I1=2, etc.\par
200$h \tab | 248\tab $g\tab | \par
// The routine for separating out combinations is as above\par
200$i \tab | 248\tab $h\tab | \par
205I1 \tab | 250(n)\tab I1\tab | 0\par
205I2 \tab | 250(n)\tab I2\tab | 0\par
205$a \tab | 250(n)\tab $a\tab | \par
206I1 \tab | 256(n)\tab I1\tab | 0\par
206I2 \tab | 256(n)\tab I2\tab | 0\par
206$a \tab | 256(n)\tab $a\tab | \par
207   \tab | 255\tab I1\tab | 0\par
207   \tab | 255\tab I2 \tab | 0\par
207$a \tab | 255\tab $a (n)\tab | \par
208$a \tab | 254(n)\tab I1\tab | 0\par
208$a \tab | 254(n)\tab I2\tab | 0\par
208$a \tab | 254(n)  $a \tab | \par
210   \tab | 260\tab I1\tab | 0\par
210   \tab | 260\tab I2\tab | 0\par
210$a \tab | 260\tab $a (n)\tab | \par
210$c \tab | 260\tab $b (n)\tab | \par
210$d \tab | 260\tab $c (n)\tab | \par
215   \tab | 300(n)\tab I1\tab | 0\par
215   \tab | 300(n)\tab I2\tab | 0\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 // Searches end of first number Searches first word Compare it with v. vol.To(BFirst(Number)) If v. or vol. 300$a is 215$a until first number\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \tx851\tx1701\tx2268 215$a \tab | 300(n)\tab $a \tab | Sto(0); From(EFirst(Number)); If (S!='') Then \tab\tab\tab\tab Between(BFirst(String),EFirst(String));  If (S='v.' \tab\tab\tab\tab or S='vol.') Then Mem(0);\par
// If no number then whole 215$a in 300$a\par
215$a \tab | 300(n)\tab $a \tab | Sto(0); From(EFirst(Number)); If (S='') Then \tab\tab\tab\tab\tab Mem(0)\par
// If not v. nor vol. then whole 215$a in 300$a\par
215$a \tab | 300(n)\tab $a \tab | Sto(0); From(EFirst(Number)); If (S!='') Then \tab\tab\tab\tab Between(BFirst(String),EFirst(String));If \tab\tab\tab\tab\tab Not(S='v.' or S='vol.') Then Mem(0)\par
215$a \tab | 300(n)\tab $f  \tab | From(BFirst(Number)); If (S!='') Then Sto(0); \tab\tab\tab\tab Between(BFirst(String),EFirst(String)); If (S='v.' \tab\tab\tab\tab or S='vol.') Then Mem(0); To(EFirst(number))\par
215$a \tab | 300(n)\tab $n \tab | From(EFirst(Number)); If (S!='') Then \tab\tab\tab\tab\tab\tab Sto(0);Between(BFirst(String),EFirst(String));If \tab\tab\tab\tab (S='v.' or S='vol.') Then \tab\tab\tab\tab\tab\tab\tab\tab Mem(0);From(BFirst(String))\par
215$c \tab | 300\tab $b\tab | \par
215$d \tab | 300(n)\tab $c \tab | \par
// If 225I1=0 or\par
225I1 \tab | 490(n)\tab I1      \tab | If (S=0) Then 1\par
// 225I1=1 then creates 490\par
225I1 \tab | 490(n)\tab I1\tab | If (S=1) Then 0\par
225I1 \tab | 490(n)\tab I2\tab | If (S!=2) Then 0\par
225I1 \tab | 440(n)\tab I1\tab | If (S=2) Then 0\par
225I1 \tab | 440(n)\tab I2\tab | If (S=2) Then 0\par
225$a \tab | 490(n)\tab $a\tab | If (I1!=2) Then S\par
225$a \tab | 440(n)\tab $a\tab | If (I1=2) Then S\par
225$h \tab | 490\tab $l \tab | Sto(0);If (I1!=2) Then Next($i,$h);If (S='') Then \tab\tab\tab\tab Mem(0) Else Mem(0)+', '+S\par
225$i \tab | 490\tab $l \tab | Sto(0); If (I1!=2) Then Last($h,$i);If (S='') Then \tab\tab\tab\tab Mem(0)\par
225$h \tab | 440\tab $l \tab | Sto(0);If (I1=2) Then Next($i,$h);If (S='') Then \tab\tab\tab\tab Mem(0) Else Mem(0)+', '+S\par
225$i \tab | 440\tab $l \tab | Sto(0); If (I1=2) Then Last($h,$i);If (S='') Then \tab\tab\tab\tab Mem(0)\par
225$v \tab | 490$v \tab  \tab | If (I1!=2) Then S\par
225$v \tab | 440\tab $v \tab | If (I1=2) Then S\par
225$x \tab | 490(n)\tab $w \tab | + If (I1!=2) Then S\par
225$x \tab | 440(n)\tab $w \tab | + If (I1=2) Then S\par
// Indicator 1 is 0\par
300   \tab | 500(n)\tab I1 \tab | 0\par
// Indicator 2 is 0\par
300   \tab | 500(n)\tab I2 \tab | 0\par
300$a \tab | 500\tab  $a\tab |\par
410$1 \tab | 840(no)\tab I1 \tab | If (S=200) Then Last($1);If ((S='') or ((S!=700) \tab\tab\tab\tab and (S!=710) and (S!=720))) Then 0\par
410$1 \tab | 840(no)\tab I2 \tab | If (S=200) Then Last($1);If ((S='') or ((S!=700) \tab\tab\tab\tab and (S!=710) and (S!=720))) Then 0\par
410$1 \tab | 840(no) $a      \tab | If (S=200) Then Sto(0); Last($1);If ((S='') \tab\tab\tab\tab\tab or ((S!=700) and (S!=710) and (S!=720))) Then \tab\tab\tab\tab\tab Mem(0)\par
410$1 \tab | 800(no)\tab I1\tab | If (S=700) Then 0\par
410$1 \tab | 800(no)\tab I2\tab | If (S=700) Then 0\par
410$1 \tab | 800(no)\tab $a\tab | If (S=700) Then Delete(',')\par
410$1 \tab | 800(no)\tab $t\tab | If (S=200) Then Sto(0); Last($1);If (S=700) Then \tab\tab\tab\tab Mem(0);\par
410$1 \tab | 810(no)\tab I1\tab | If (S=710) Then 0\par
410$1 \tab | 810(no)\tab I2 \tab | If (S=710) Then 0\par
410$1 \tab | 810(no)\tab $a\tab | If (S=710) Then Delete(',')\par
410$1 \tab | 810(no)\tab $t\tab | If (S=200) Then Sto(0); Last($1);If (S=710) Then \tab\tab\tab\tab Mem(0);\par
410$1 \tab | 820(no)\tab I1\tab | If (S=720) Then 0\par
410$1 \tab | 820(no)\tab I2\tab | If (S=720) Then 0\par
410$1 \tab | 820(no)\tab $a\tab | If (S=720) Then Delete(',')\par
410$1 \tab | 820(no)\tab $t\tab | If (S=200) Then Sto(0); Last($1);If (S=720) Then \tab\tab\tab\tab Mem(0);\par
500I1 \tab | 240\tab I1\tab | If (n=1 and S=1 and I2=0) Then 4\par
500I1 \tab | 240\tab I1\tab | If (n=1 and S=1 and I2=1) Then 3\par
500I1 \tab | 240\tab I1\tab | If (n=1 and S=0 and Exists(@710)) Then 0\par
500I1 \tab | 240\tab I1\tab | If (n=1 and S=0 and Not Exists(@710)) Then 1\par
500$a \tab | 240\tab I2\tab | If (n=1) Then BFirst('|'); If (S>9) Then 9 Else S\par
// Field 500 is repeatable\par
500$a \tab | 240\tab $a\tab | If (n=1) Then S\par
500$a \tab | 740(no) $a\tab | If (n>1) Then S\par
500$a \tab | 740\tab $a\tab | \par
500$h \tab | 240\tab $s (n)\tab | Sto(0);If (I1!=2) Then Next($i,$h);If (S='') Then \tab\tab\tab\tab Mem(0) Else Mem(0)+', '+S\par
500$i \tab | 240\tab $s (n)\tab | Sto(0); If (I1!=2) Then Last($h,$i);If (S='') \tab\tab\tab\tab Then Mem(0)\par
500$k \tab | 240\tab $o\tab | If (n=1) Then S\par
500$k \tab | 740(no)\tab $o\tab | If (n>1) Then S\par
500$l \tab | 240\tab $p (n)\tab | S\par
500$m \tab | 240\tab $r\tab | If (n=1) Then S\par
500$m \tab | 740(no)\tab  $r\tab | If (n>1) Then S\par
500$n \tab | 240\tab $j (n)\tab | \par
500$q \tab | 240\tab $q (n)\tab | \par
500$r \tab | 240\tab $d \tab | If (n=1) Then S\par
500$r \tab | 740(no)\tab $d\tab | If (n>1) Then S\par
500$s \tab | 240\tab $f \tab | If (n=1) Then S\par
500$s \tab | 740(no)\tab $f\tab | If (n>1) Then S\par
500$u \tab | 240\tab $h\tab | If (n=1) Then S\par
500$u \tab | 740(no)\tab $h\tab | If (n>1) Then S\par
500$w \tab | 240\tab $k\tab | If (n=1) Then S\par
500$w \tab | 740(no)\tab $k\tab | If (n>1) Then S\par
530I1 \tab | 222\tab I1\tab | 0\par
530$a \tab | 222\tab I2\tab | If (n=1) Then Sto(0); Bfirst('\\88'); Sto(1);Mem(0); \tab\tab\tab Bfirst('\\89'); S-Mem(1);S-1;if (S<0) then 0 Else S\par
// Take only the $a of first 530 for example\par
530$a \tab | 222\tab $a\tab | If (n=1) Then S\par
// Take only the $b of first 530 for example\par
530$b \tab | 222\tab $b\tab | If (n=1) Then S\par
// Indicator 1 is 0\par
675\tab | 080(n)\tab I1\tab | 0\par
// Indicator 2 is 0\par
675\tab | 080(n)\tab I2\tab | 0\par
675$a \tab | 080\tab $a\tab | \par
// Indicator 1 is 0\par
676\tab | 082(n)\tab I1\tab | 0\par
// Indicator 2 is 0\par
676\tab | 082(n)\tab I2\tab | 0\par
676$a \tab | 082\tab $a\tab | \par
676$v \tab | 082\tab $c\tab | \par
700I1 \tab | 100\tab I2\tab | 0\par
// Store 700$a in memory 0 Search pos of first word of 700$a and store it in memory\par
// Search pos of last word of 700$a (memory 0) and compare it with first word pos (memory 1).\par
// If first word pos and last word pos are the same, there is only one word in 700$a\par
700I2\tab | 100\tab I1\tab | If (S=0) Then 0\par
700I2\tab | 100\tab I1\tab | If (S=1) Then $a; Sto(0); BFirst(String); Sto(1); \tab\tab\tab\tab Mem(0); BLast(String);If (S=Mem(1)) Then 1 Else 2\par
700$a \tab | 100\tab $a\tab | Delete(',')\par
// If neither ( nor ) is found, then $c goes in $e\par
700$b \tab | 100\tab $h\tab | \par
700$c \tab | 100\tab $e\tab | \tab If ((n=1) and ($a precedes S) and ($b follows S)and \tab\tab\tab\tab BFirst('(')=0 and BFirst(')')=0) Then S | 100$f | \tab\tab\tab\tab If ((n=1) and Not(($a precedes S) and ($b follows \tab\tab\tab\tab S)) andBFirst('(')=0 and BFirst(')')=0) Then S\par
700$c \tab | 100\tab $l\tab | \tab If ((n=1) and (BFirst('(')!=0 or BFirst(')')!=0)) \tab\tab\tab\tab Then S\par
700$c \tab | 100\tab $d\tab | + If (n>1) Then S\par
700$d \tab | 100\tab $e\tab | S\par
700$f \tab | 100\tab $c\tab | \par
700$g \tab | 100\tab $k\tab | \par
701I1 \tab | 700(n)\tab I2\tab | 0\par
701I2 \tab | 700(n)\tab I1\tab | If (S=0) Then 0\par
701I2 \tab | 700(n)\tab I1\tab | If (S=1) Then $a; Sto(0); BFirst(String); Sto(1); \tab\tab\tab\tab Mem(0); BLast(String);If (S=Mem(1)) Then 1 Else 2\par
701$a \tab | 700(n)\tab $a\tab | Delete(',')\par
701$b \tab | 700(n)\tab $h\tab | \par
// If neither ( nor ) is found, then $c goes in $e\par
701$c \tab | 700(n)\tab $e\tab | If ((ns=1) and ($a precedes S) and ($b follows \tab\tab\tab\tab S)and BFirst('(')=0 and BFirst(')')=0) Then S\par
701$c \tab | 700(n)\tab $f\tab | If ((ns=1) and Not(($a precedes S) and ($b \tab\tab\tab\tab\tab follows S)) andBFirst('(')=0 and BFirst(')')=0) \tab\tab\tab\tab Then S\par
701$c \tab | 700(n)\tab $l\tab | If ((ns=1) and (BFirst('(')!=0 or \tab\tab\tab\tab\tab\tab BFirst(')')!=0)) Then S\par
701$c \tab | 700(n)\tab $d\tab | + If (ns>1) Then S\par
701$d \tab | 700(n)\tab $e\tab | S\par
701$f \tab | 700(n)\tab $c\tab | \par
701$g \tab | 700(n)\tab $k\tab | \par
702I1 \tab | 700(n)\tab I2\tab | 1\par
702I2 \tab | 700(n)\tab I1\tab | If (S=0) Then 0\par
702I2 \tab | 700(n)\tab I1\tab | If (S=1) Then $a; Sto(0); BFirst(String); Sto(1); \tab\tab\tab\tab Mem(0); BLast(String);If (S=Mem(1)) Then 1 Else 2\par
702$a \tab | 700(n)\tab $a\tab | Delete(',')\par
702$b \tab | 700(n)\tab $h\tab | \par
// If neither ( nor ) is found, then $c goes in $e\par
702$c \tab | 700(n) $e\tab\tab | If ((ns=1) and ($a precedes S) and ($b follows \tab\tab\tab\tab S)and BFirst('(')=0 and BFirst(')')=0) Then S\par
702$c \tab | 700(n) $f\tab |\tab If ((ns=1) and Not(($a precedes S) and ($b follows \tab\tab\tab\tab S)) andBFirst('(')=0 and BFirst(')')=0) Then S\par
702$c \tab | 700(n)\tab $l\tab | If ((ns=1) and (BFirst('(')!=0 or \tab\tab\tab\tab\tab\tab BFirst(')')!=0)) Then S\par
702$c \tab | 700(n)\tab $d\tab | + If (ns>1) Then S\par
702$d \tab | 700(n)\tab $e\tab | S\par
702$f \tab | 700(n)\tab $c\tab | \par
702$g \tab | 700(n)\tab $k\tab | \par
710\tab | 110\tab\tab | If (I1=0) Then Sort('ijk')\par
710I1 \tab | 110\tab I2\tab | If (I1=0) Then S\par
710I2 \tab | 110\tab I1\tab | If (I1=0) Then S\par
710$a \tab | 110\tab $a \tab | If (I1=0) Then Delete(','); Delete('.');\par
710$b \tab | 110\tab $c (n)\tab | If (I1=0) Then S\par
710$c \tab | 110\tab $e (n)\tab | If (I1=0) Then S\par
710$d \tab | 110\tab $i\tab | + If (I1=0) Then S\par
710$e \tab | 110\tab $j\tab | If (I1=0) Then S\par
710$f \tab | 110\tab $ \tab | If (I1=0) Then S\par
710I1 \tab | 111\tab I1\tab | If (S=1) Then 0\par
710I1 \tab | 111\tab I2\tab | If (S=1) Then 0\par
710$a \tab | 111\tab $a\tab | If (I1=1) Then Delete(','); Delete('.')\par
710$b \tab | 111\tab $c (n)\tab | If (I1=1) Then S\par
710$c \tab | 111\tab $e (n)\tab | If (I1=1) Then S\par
710$d \tab | 111\tab $i\tab | + If (I1=1) Then S\par
710$e \tab | 111\tab $j\tab | If (I1=1) Then S\par
710$f \tab | 111\tab  $k\tab | If (I1=1) Then S\par
711\tab | 710(n)\tab | If (I1=0) Then Sort('ijk')\par
711I1\tab | 710(n)\tab I2\tab | If (I1=0) Then S\par
711I2 \tab | 710(n)\tab I1\tab | If (I1=0) Then S\par
711$a \tab | 710(n)\tab $a\tab | If (I1=0) Then Delete(','); Delete('.');\par
711$b \tab | 710\tab $c\tab | If (I1=0) Then S\par
711$c \tab | 710\tab $e\tab | If (I1=0) Then S\par
711$d \tab | 710(n)\tab $i\tab | + If (I1=0) Then S\par
711$e \tab | 710(n)\tab $j\tab | If (I1=0) Then S\par
711$f \tab | 710(n)\tab $k\tab | If (I1=0) Then S\par
711I1 \tab | 711(n)\tab I1\tab | If (S=1) Then 0\par
711I1 \tab | 711(n)\tab I2\tab | If (S=1) Then 0\par
712$a \tab | 711(n)\tab $a\tab | If (I1=1) Then Delete(','); Delete('.')\par
712$b \tab | 711\tab $c\tab | If (I1=1) Then S\par
712$c \tab | 711\tab $e\tab | If (I1=1) Then S\par
712$d \tab | 711(n)\tab $i\tab | + If (I1=1) Then S\par
712$e \tab | 711(n)\tab $j\tab | If (I1=1) Then S\par
712$f \tab | 711(n)\tab $k\tab | If (I1=1) Then S\par
720I1\tab | 100\tab I1\tab | 3\par
// Any word(s) in parentheses lose the parentheses and go in $l - similar to UNI 700 $c\par
720I2  \tab | 100\tab I2\tab | 0\par
720$a \tab | 100\tab $a\tab | Sto(0); To(BFirst(',')); If (S!='') Then S Else Mem(0)\par
720$a \tab | 100\tab $l\tab | From(EFirst(',')); If (S!='') Then S\par
720$f \tab | 100\tab $c\tab | \par
801\tab | 040\tab I1\tab | 0\par
801\tab | 040\tab I2\tab | 0\par
801$b\tab | 040\tab $a\tab | \par
801\tab | 040\tab $d\tab | 'Uk'\par
900$3 \tab | 999\tab I1\tab | 0\par
900$3 \tab | 999\tab I2\tab | 0\par
900$3 \tab | 999\tab $a (n)\tab | From(3)\par
\pard\s1\sb240\cf1\lang2057\b\caps\f2\fs28\page\page Appendix 2\par
\pard\cf0\lang1033\b0\caps0\f1\fs24\par
\pard\s2\sb120\lang2057\b\f2\fs28 UNIMARC to UKMARC Conversion Initialization File\par
\pard\lang1033\b0\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 [DEFAULT_FILES]\par
ErrorLogFile=c:\\usem\\uni2uk\\errlog.txt\par
RuleFile=C:\\USEM\\UNI2UK\\uni2uk.rul\par
TranscodingCharacterTable=C:\\USEM\\UNI2UK\\iso2blec.trs\par
InputFormatCheckingTable=C:\\USEM\\UNI2UK\\uni.chk\par
OutputFormatCheckingTable=C:\\USEM\\UNI2UK\\uk.chk\par
MarcInputFile=C:\\USEM\\UNI2UK\\ccf.MRC\par
MarcOutputFile=C:\\USEM\\UNI2UK\\uk.mrc\par
InputMarcEditConfigurationFile=C:\\USEM\\UNI2UK\\uni.cnf\par
OutputMarcEditConfigurationFile=C:\\USEM\\UNI2UK\\uk.cnf\par
\par
[DEFAULT_MARC_ATTRIBUTES]\par
IsInputBlockSegmentedChecked=\par
IsInputLastBlockPaddedChecked=\par
InputMarcSizeBlock=2048\par
InputMarcMinDataFree=5\par
InputMarcPaddingChar=5E\par
\par
IsOutputBlockSegmentedChecked=FALSE\par
IsOutputLastBlockPaddedChecked=FALSE\par
OutputMarcSizeBlock=2048\par
OutputMarcMinDataFree=5\par
OutputMarcPaddingChar=5E\par
\par
[DEFAULT_VALUES]\par
MaxErrorsToBeEncoutered=19999\par
OrdinalNumber=5\par
\par
[DEFAULT_STATES]\par
IsInteractiveExecutionModeChecked=TRUE\par
IsVerboseExecutionModeChecked=\par
IsShowCommandsActivated=\par
\par
[DEBUG]\par
IsDebugExecutionModeChecked=FALSE\par
\pard\f1\fs24\par
\pard\s1\sb240\cf1\lang2057\b\caps\f2\fs28\page\page Appendix 3\par
\pard\cf0\lang1033\b0\caps0\f1\fs24\par
\pard\s2\sb120\lang2057\b\f2\fs28 UNIMARC to UKMARC Conversion Look Up Tables\par
\pard\lang1033\b0\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 801_091.tbl\par
\par
O X / U - 0x31 | G B\par
C A / U - 0x31 | G B\par
\lang1031 E N / N - 0x31 | G B\par
\lang1033 A B / N - 0x31 | G B\par
\lang1031 D B / U - 0x31 | I E\par
\pard\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \lang1033\f4\fs20 biog.tbl\par
\par
a | a\par
b | b\par
c | c\par
#DEFAULT | 0X20\par
\pard\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 date.tbl\par
\par
d | s\par
e | r\par
f | s\par
g | s\par
h | s\par
#DEFAULT | 0X20\par
\pard\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \lang1031\f4\fs20 gmd.tbl\par
\par
d | W\par
e | W\par
\lang1033 f | W\par
g | W\par
h | L\par
i | W\par
j | W\par
r | W\par
z | W\par
#DEFAULT | 0X20\par
\pard\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 frm.tbl\par
\par
a | a\par
b | b\par
c | c\par
d | d\par
\lang1031 e | e\par
g | g\par
\lang1033 i | i\par
j | k\par
l | w\par
n | x\par
s | t\par
#DEFAULT | 0X20\par
aud.tbl\par
\par
a | j\par
b | j\par
\lang1035 c | j\par
d | j\par
\lang1033 #DEFAULT | 0X20\par
\pard\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 illustra.tbl\par
\par
a | a\par
b | b\par
c | c\par
d | d\par
\lang1031 e | e\par
g | g\par
\lang1033 h | h\par
i | i\par
j | j\par
k | k\par
1 | 1\par
#DEFAULT | 0X20\par
\pard\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 iso2uk.tbl\par
\par
A D | a n\par
A E | t s\par
A F | a f\par
A G | a g\par
A I | a m\par
A L | a a\par
A M | a i\par
A N | n a\par
A O | a o\par
A Q | a y\par
A R | a q\par
A S | a s\par
A T | a u\par
A U | a t\par
A Z | a j\par
B B | b b\par
B D | b g\par
\lang1031 B E | b e\par
B F | u v\par
B G | b u\par
\lang1033 B H | b a\par
B I | b d\par
B J | d m\par
B M | b m\par
B N | b x\par
B O | b o\par
B R | b l\par
B S | b f\par
\lang1031 B T | b t\par
\lang1033 B V | b v\par
B W | b s\par
B Y | b w\par
\lang1031 B Z | b h\par
\lang1033 C A | c n\par
C C | x b\par
C F | c x\par
C G | c g\par
C H | s z\par
C I | i v\par
C K | c w\par
C L | c l\par
C M | c m\par
C N | c c\par
C O | c k\par
C R | c r\par
\lang1031 C U | c u\par
C V | c v\par
\lang1033 C X | x a\par
C Y | c y\par
C Z | c s\par
\lang1031 D E | g e\par
D J | f t\par
D K | d k\par
\lang1033 D M | d q\par
D O | d r\par
\lang1031 D Z | a e\par
E C | e c\par
E E | e r\par
\lang1033 E S | s p\par
\lang1031 E T | e t\par
\lang1033 F I | f i\par
F J | f j\par
F K | f k\par
F O | f a\par
F R | f r\par
G A | g o\par
G B | u k\par
G D | g d\par
G E | g s\par
G F | f g\par
G H | g h\par
G I | g i\par
G L | g l\par
G M | g m\par
G N | g v\par
G P | g p\par
\lang1031 G Q | e g\par
\lang1033 G R | g r\par
\lang1031 G T | g t\par
G U | g u\par
\lang1033 G W | p g\par
G Y | g y\par
\lang1031 H K | h k\par
H M | h m\par
H N | h o\par
H T | h t\par
\lang1033 H U | h u\par
I D | i o\par
I E | i e\par
I L | i s\par
I N | i i\par
I O | b i\par
I Q | i q\par
I R | i r\par
I S | i c\par
I T | i t\par
J M | j m\par
J O | j o\par
J P | j a\par
\lang1031 K E | k e\par
K G | k g\par
K H | c b\par
\lang1033 K I | g b\par
K M | c q\par
K N | x i\par
K P | k o\par
K R | k n\par
\lang1031 K W | k u\par
K Y | c j\par
K Z | k z\par
\lang1033 L A | l s\par
\lang1031 L B | l e\par
L C | x k\par
\lang1033 L I | l h\par
\lang1031 L K | c e\par
\lang1033 L R | l b\par
L S | l s\par
\lang1031 L T | l i\par
L U | l u\par
L V | l v\par
\lang1033 L Y | l y\par
M A | m r\par
M C | m c\par
M D | m v\par
M G | m g\par
M L | m l\par
M M | b r\par
M N | m p\par
M O | m h\par
M Q | m q\par
\lang1031 M R | m u\par
\lang1033 M S | m j\par
\lang1031 M T | m m\par
M U | m f\par
M V | x c\par
M W | m w\par
M X | m x\par
\lang1033 M Y | m y\par
\lang1031 M Z | m z\par
\lang1033 N A | s x\par
\lang1031 N C | n l\par
N E | n g\par
N F | n x\par
N G | n r\par
\lang1033 N I | n q\par
\lang1031 N L | n e\par
N O | n o\par
N P | n p\par
N R | n u\par
N U | x h\par
N Z | n z\par
\lang1033 O M | m k\par
P A | p n\par
\lang1031 P E | p e\par
\lang1033 P F | f p\par
P G | p p\par
P H | p h\par
P K | p k\par
P L | p l\par
P M | x l\par
P N | p c\par
P R | p r\par
\lang1031 P T | p o\par
\lang1033 P Y | p y\par
Q A | q a\par
\lang1031 R E | r e\par
\lang1033 R O | r m\par
\lang1031 R U | r u\par
\lang1033 R W | r w\par
S A | s u\par
S B | b p\par
S C | s e\par
S D | s j\par
S E | s w\par
S G | s i\par
S H | x j\par
S J | s b\par
S L | s l\par
S M | s m\par
S N | s g\par
S O | s o\par
S R | s r\par
S T | s f\par
S V | e s\par
S Y | s y\par
S Z | s q\par
\lang1031 T C | t c\par
T D | c d\par
T F | f s\par
T G | t g\par
T H | t h\par
T J | t a\par
T K | t l\par
T M | t k\par
T N | t i\par
T O | t o\par
T R | t u\par
T T | t r\par
T V | t v\par
T W | c h\par
T Z | t z\par
\lang1033 U A | u n\par
\lang1031 U G | u g\par
\lang1033 U S | u s\par
\lang1035 U Y | u y\par
\lang1031 U Z | u z\par
\lang1033 V A | v c\par
V C | x m\par
\lang1031 V E | v e\par
\lang1033 V G | v b\par
V I | v i\par
V N | v n\par
V U | n n\par
W F | w f\par
W S | w s\par
\lang1031 Y E | y e\par
\lang1033 Y U | y u\par
Z A | s a\par
Z M | z a\par
\lang1031 Z R | c g\par
Z W | r h\par
\lang1033 #DEFAULT | X X\par
ser.tbl\par
\par
a | p\par
c | p\par
#DEFAULT | 0X20\par
\pard\f1\fs24\par
\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 lit.tbl\par
\par
a | f\par
b | d\par
\lang1031 c | e\par
d | h\par
\lang1033 e | i\par
f | j\par
g | p\par
h | s\par
z | m\par
#DEFAULT | 0X20\par
\pard\s1\sb240\cf1\lang2057\b\caps\f2\fs28\page Appendix 4\par
\pard\cf0\lang1033\b0\caps0\f1\fs24\par
\pard\s2\sb120\lang2057\b\f2\fs28 UNIMARC to UKMARC Conversion Format Checking Tables\par
\pard\lang1033\b0\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 UKMARC FORMAT CHECKING FILE\par
\par
// Record control number\par
001_| I1= | I2= |\par
\par
// Information codes\par
008_| I1= | I2= |\par
\par
// Library of Congress card number\par
010?| I1=0 | I2=0 | $a_ |\par
\par
// British National Bibliography number\par
015?| I1=0 | I2=0 | $a_ |\par
\par
// Authority control information field\par
016?| I1=0 | I2=0 | $a+ |\par
\par
// Correction field\par
017?| I1=0 | I2=0 | $a+ |\par
\par
// International Standard Book Number (ISBN)\par
021*| I1=01 | I2=0 | $a? | $b_ | $c? | $d? | $z? |\par
\par
// International Standard Serial Number (ISSN)\par
022?| I1=0 | I2=0 | $a_ |\par
\par
// Physical description coded information field\par
037*| I1=0 | I2=0 | $a+ |\par
\par
// Cataloguing source\par
040?| I1=0 | I2=0 | $a_ | $b? \lang1031 | $c? | $d* | $e? \lang1033 |\par
\par
// Languages\par
041*| I1=01 | I2=0 | $a_ | $b?| $c? |\par
\par
// Area codes\par
043*| I1=0 | I2=0 | $a_ |\par
\par
// Library of Congress classification number\par
050*| I1=0 | I2=0 | $a_ |\par
\par
// Universal Decimal Classification number\par
080*| I1=0 | I2=0 | $a_ |\par
\par
// Dewey Decimal Classification number (old edition)\par
081*| I1=0 | I2=0 | $a_ | $b*| $c? | $d? |\par
\par
// Dewey Decimal Classification number (current edition)\par
082*| I1=0 | I2=0 | $a_ | $b* | $c? | $d? |\par
\par
// Verbal feature\par
083*| I1=0 | I2=0 | $a+ | $b* |\par
\par
// British Catalogue of Music classification number\par
085*| I1=0 | I2=0 | $a_ |\par
\par
// National shelf mark\par
087?| I1=0 | I2=012 | $a_ | $b? | \par
\par
// Previous control number\par
091*| I1=0 | I2=0 | $a_ |\par
\par
// Personal name main entry heading\par
100?| I1=0123 | I2=0 | $a_ | $c? \lang1031 | $d? | $e? | $f? | $h? | $k? | $l? | $q? | $r? | $y? \lang1033 |\par
\par
// Corporate name main entry heading\par
110?| I1=12 | I2=0 | $a_ | $c* | $e* | $i? | $j? | $k? | $p? | $q? | $y? |\par
\par
// Conference, congress, meeting, etc. name main entry heading\par
111?| I1=0 | I2=0 | $a_ | $c* | $e* | $i? | $j? | $k? |\par
\par
// Key-title\par
222?| I1=0 | I2=0123456789 | $a_ | $b? |\par
\par
// Uniform title-excluding collective title\par
240?| I1=01234 | I2=0123456789 | $a_ | $d? \lang1031 | $e? | $f? | $g? | $h? | $j* | $k? | $o? | $p? | $q? \lang1033 | $r? | $s* | $z? | \par
\par
// Collective title\par
243?| I1=023 | I2=0 | $a_ | $k? | $o? | $q? | $r? | $s? | $z? |\par
\par
// Title and statement of responsibility area\par
245?| I1=013 | I2=0123456789 | $a_ | $b* | $d? | $e* | $f* | $i* | $j* | $k* | $l* | $z? |\par
\par
// Second level and subsequent level title and statement of responsibility information relating to a multipart item\par
248*| I1=123456789 | I2=0123456789 | $b* | $e* | $f* | $g? | $h? | $i* | $j* | $k* | $z? |\par
\par
// Edition area\par
250*| I1=0 | I2=0123456789 | $a_ | $c? \lang1031 | $d? | $e? | $k* |\par
\par
\lang1033 // Numeric and/or alphabetic, chronological or other designation area (serials)\par
255?| I1=0 | I2=0 | $a+ |\par
\par
// Mathematical data area (cartographic materials)\par
256?| I1=0 | I2=0123456789 | $a_ | $b? \lang1031 | $c? | $d? | $e? \lang1033 |\par
\par
// Publication, distribution, etc. area\par
260*| I1=01 | I2=0123456789 | $a* | $b* | $c* | $d* | $e* | $f* | $g* | $h? | $I* | $j* | $k? | $l? |\par
\par
// Physical description area\par
300*| I1=0 | I2=0 | $a? \lang1031 | $b? | $c* | $e? | $f? | $g? | $h? \lang1033 | $i? | $j? | $k? | $l* | $m* | $n? |$p? |\par
\par
// Terms of availability\par
350?| I1=0 | I2=0 | $a_ | $c? | \par
\par
// Series area - title of series in added entry heading form\par
440*| I1=0123456789 | I2=0123456789 | $a_ | $b* | $e* | $k* | $l* | $v* | $w? |\par
\par
// Series area - title of series not in added entry heading form\par
490*| I1=01 | I2=0123456789 | $a_ | $b* | $e* | $k* | $l* | $v* | $w? |\par
\par
// Nature, scope or artistic form note\par
500*| I1=0 | I2=0123456789 | $a_ | \par
\par
// "with" note\par
501*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Dissertation note\par
502*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Edition and history note (monographs) relationships with other serials note (serials)\par
503*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Bibliography and index note\par
504*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Contents note\par
505*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Statements of responsibility note\par
508*| I1=0 | I2=0123456789 | $a_ |\par
\par
// ISBN and ISSN note\par
511*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Summary note\par
513*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Title proper, parallel title and other title information note\par
514*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Numbering and chronological designation note (serials)\par
515*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Mathematical and other cartographic data note (cartographic materials)\par
516*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Change of control number note\par
518*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Audience note\par
521*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Accompanying materials and supplements note\par
525*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Publication, distribution, etc. note\par
528*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Other versions available note\par
530*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Physical description note\par
531*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Series note\par
532*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Reference to published descriptions note\par
534*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Note relating to original (graphic materials and microforms)\par
536*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Program note (machine-readable data files)\par
537*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Numbers borne by the item note\par
538*| I1=0 | I2=0123456789 | $a_ | $b? |\par
\par
// Mode of use note (machine-readable data files)\par
542*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Language of the item and/or translation or adaptation note\par
546*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Frequency note (serials)\par
554*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Indexes note (serials)\par
555*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Item described note (serials)\par
556*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Graphic index and characteristic sheet note (cartographic materials)\par
557*| I1=0 | I2=0123456789 | $a_ |\par
\par
// Personal name subject heading\par
600*| I1=0123 | I2=0123456789 | $a_ | $c? \lang1031 | $d? | $e? | $f? | $h? | $k? | $l? | $m? | $n? | $o? | $q? | $r? | $t? | $u? | $x* | $y* | $z* |\par
\par
\lang1033 // Corporate name subject heading\par
610*| I1=12 | I2=0123456789 | $a_ | $c* | $e* | $I? | $j? | $k? | $p? | $t? | $u? | $x* | $y* | $z* |\par
\par
// Conference, congress, meeting etc. subject heading\par
611*| I1=0 | I2=0123456789 | $a_ | $c* | $e* | $i? \lang1031 | $j? | $k? | $t? | $u? | $x* | $y* | $z* |\par
\par
\lang1033 // Uniform title subject heading\par
640*| I1=0 | I2=0123456789 | $a_ | $d? \lang1031 | $e? | $f? | $g? | $h? | $j* | $k? | $o? | $p? | $q? | $r? | $s* | $x* | $y* | $z* |\par
\par
\lang1033 // Title subject heading\par
645*| I1=0 | I2=0123456789 | $a_ | $x* | $y* | $z* |\par
\par
// Topical Library of Congress subject heading\par
650*| I1=0 | I2=0123456789 | $a_ | $x* | $y* | $z* |\par
\par
// Geographical Library of Congress subject heading\par
651*| I1=0 | I2=0123456789 | $a_ | $x* | $y* | $z* |\par
\par
// Subject topical descriptors\par
660*| I1=01 | I2=0 | $a* | $b* | $c* | $d? | \par
\par
// Subject geographical descriptors\par
661*| I1=0 | I2=0 | $a? | $b? | $d? | \par
\par
// PRECIS string\par
690*| I1=0 | I2=0123456789| $a* | $c* | $d* | $e* | $f* | $g* | $h* | $i* | $k* | $l* | $m* | $v* | $w* | $x* | $y* | $z* |\par
\par
// Subject indicator number\par
691*| I1=0 | I2=0123456789| $a_ |\par
\par
// Reference indicator number\par
692*| I1=0 | I2=0123456789| $a_ |\par
\par
// Personal name added entry heading\par
700*| I1=0123 | I2=012 | $a_ | $c? \lang1031 | $d? | $e? | $f? | $h? | $k? | $l? | $m? | $n? | $o? | $p? | $q? | $r? | $t? | $u? | $v? | $w? | $y? | $z? \lang1033 |\par
\par
// Corporate name added entry heading\par
710*| I1=12 | I2=012 | $a_ | $c* | $e* | $i? | $j? | $k? | $p? \lang1031 | $q? | $t? | $u? | $v? | $w? | $y? \lang1033 | $z? |\par
\par
// Conference, congress, meeting, etc. name added entry heading\par
711*| I1=0 | I2=012 | $a_ | $c* | $e* | $i? \lang1031 | $j? | $k? | $t? | $u? | $v? | $w? \lang1033 | $y? | $z? | \par
\par
// Uniform title added entry heading\par
740*| I1=0 | I2=0123456789 | $a_ | $d? \lang1031 | $e? | $f? | $g? | $h? | $j* | $k? | $o? | $p? | $q? \lang1033 | $r? | $s* | $v? | $w? | $z? |\par
\par
// Title added entry heading - excluding uniform titles\par
745*| I1=01 | I2=0123456789 | $a_ | $v? | $w? | $z? | \par
\par
// Real name note\par
790*| I1=0 | I2=0 | $a_|\par
\par
// Personal author series added entry heading\par
800*| I1=0123 | I2=0 | $a_ | $c? \lang1031 | $d? | $e? | $f? | $h? | $k? | $l? | $q? | $r? | $t? | $u? | $v? | $w? \lang1033 | $y? | $z? | \par
\par
// Corporate series added entry heading\par
810*| I1=12 | I2=0 | $a_ | $c* | $e* | $i? | $j? | $k? | $p? \lang1031 | $q? | $t? | $u? | $v? | $w? | $y? \lang1033 | $z? | \par
\par
// Conference, congress, meeting, etc. series added entry heading\par
811*| I1=0 | I2=0 | $a_ | $c* | $e* | $i? \lang1031 | $j? | $k? | $t? | $u? | $v? | $w? \lang1033 | $y? | $z? | \par
\par
// Series title added entry heading\par
840*| I1=0 | I2=0123456789 | $a_ | $l* | $v* | $w? | $z? | \par
\par
// Reference from a personal name\par
900*| I1=0123 | I2=01 | $a+ | $c? \lang1031 | $d? | $e? | $f? | $h? | $k? | $l? | $q? | $r? | $u? \lang1033 | $x* | $z* |\par
\par
// Reference from a corporate name\par
910*| I1=012 | I2=0 | $a+ | $c* | $e* | $g? | $h? | $i? | $j? | $k? | $p? | $q? | $u? | $x* | $z* |\par
\par
// Reference from the name of a conference, congress, meeting, etc.\par
911*| I1=0 | I2=0 | $a+ | $c* | $e* | $i? | $j? | $k? | $u? | $x* | $z* |\par
\par
// Reference from a title of a work\par
945*| I1=0 | I2=0 | $a+ | $d? \lang1031 | $e? | $f? | $g? | $h? | $j* | $k? | $o? | $p? | $q? \lang1033 | $r? | $s* | $x* | $z* |\par
\pard\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \page\f4\fs20 UNIMARC FORMAT CHECKING FILE\par
\par
// Record identifier (Cl\'e9 d'enregistrement)\par
001_ | I1= | I2=\tab\tab\tab\tab\tab\tab // Man/Uni (no subfield )\par
\par
// Version identifier (Date de mise a jour)\par
005? | I1= | I2=\tab\tab\tab\tab\tab\tab // Opt/Uni ( no subfield )\par
\par
// International Standard Book Number (ISBN)\par
010* | I1=_ | I2=_ | $a? | $b? | $d? | $z*\tab // Opt/Rep ( $z:Opt/Rep; others:Opt/Uni )\par
 \par
// International Standard Serial Number (ISSN)\par
011* | I1=_ | I2=_ | $a? | $b? | $d* | $y* | $z* // Opt/Rep ( $a,b:Opt/Uni; others:Opt/Rep )\par
\par
// National Bibliography Number (Num\'e9ro d'annonce dans la bibliographie de la France) \par
020* | I1=_ | I2=_ | $a? | $b? | $z*\tab // Opt/Rep ( $z:Opt/Rep; others:Opt/Uni )\par
\par
// Legal deposit number ( Num\'e9ro de d\'e9p\'f4t l\'e9gal )\par
021* | I1=_ | I2=_ | $a? | $b? | $z*\tab // Opt/Rep ( $z:Opt/Rep; others:Opt/Uni )\par
 \par
// Government publication number ( Num\'e9ro de publication officielle )\par
022* | I1=_ | I2=_ | $a? | $b? | $z*\tab // Opt/Rep ( $z:Opt/Rep; others:Opt/Uni )\par
 \par
// CODEN ( CODEN )\par
040* | I1=_ | I2=_ | $a? | $z* // Opt/Rep ( $z:Opt/Rep; others:Opt/Uni )\par
 \par
// Publisher's number ( Num\'e9ros d'\'e9diteurs )\par
071* | I1=0123 | I2=01 | $a? | $b?\tab\tab // Opt/Rep ( $a,b:Opt/Uni )\par
\par
// Previous control number\par
091*| I1=_ | I2=_ | $a_ | $b_\par
\par
// General processing data - general ( Informations cod\'e9es - g\'e9n\'e9ral )\par
100_ | I1=_ | I2=_ | $a?\tab\tab\tab\lang1035 // Man/Uni ( $a:Opt/Uni )\par
\par
\lang1033 // Language of the item ( Langue de publication )\par
101_ | I1=012 0x7C | I2=_ | $a* | $b* | $c* | $d* | $e* | $f* | $h* | $i* | $j* | $g?\tab\tab\tab\tab // Man/Uni ( $g:Opt/Uni; others:Opt/Rep )\par
\par
// Country of publication or production ( Pays de publication ou de production )\par
102? | I1=_ | I2=_ | $a* | $b*\tab\tab // Opt/Uni ( others:Opt/Rep )\par
\par
// Coded data field\tab : Books ( monographies )\par
105? | I1=_ | I2=_ | $a?\tab\tab\tab\lang1035 // Opt/Uni ( $a:Opt/Uni )\par
\par
\lang1033 // Coded data field : textual material - physical attributes ( Informations sur le support de texte )\par
106? | I1=_ | I2=_ | $a?\tab\tab\tab\lang1035 // Opt/Uni ( $a:Opt/Uni )\par
\par
\lang1033 // Coded data field : serials ( Publications en serie )\par
110? | I1=_ | I2=_ | $a?\tab\tab\tab\lang1035 // Opt/Uni ( $a:Opt/Uni )\par
\par
\lang1033 // Coded data field : visual projections, video recordings and motion pictures ( Images projet\'e9es, enregistrements vid\'e9o et films )\par
115* | I1=_ | I2=_ | $a? \tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Coded data field : graphics ( Documents graphiques )\par
116* | I1=_ | I2=_ | $a?\tab\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Coded data field : cartographic materials - general ( Documents cartographiques - g\'e9n\'e9ral )\par
120? | I1=_ | I2=_ | $a?\tab\tab\tab\tab\lang1035 // Opt/Uni ( $a:Opt/Uni )\par
\par
\lang1033 // Coded data field : cartographic materials - physical attributes (Documents cartographiques - caracteristiques physiques )\par
121? | I1=_ | I2=_ | $a_ | $b_\tab\tab // Opt/Uni ( $a,b:Man/Uni )\par
\par
// Coded data field : time period of item content ( P\'e9riode historique etudi\'e9e dans le document )\par
122* | I1=012 | I2=_ | $a+\tab\tab\tab // Opt/Rep ( $a:Man/Rep )\par
\par
// Coded data field : cartographic materials - scale ans coordinates\tab ( Documents cartographiques - \'e9chelle et coordonn\'e9es )\par
123* | I1=0123 | I2=_ | $a_ | $b* | $c* | $d? \lang1031 | $e? | $f? | $g? \lang1033 | $h* | $i? | $j? | $k? | $m? | $n?\par
\par
// Coded data field : cartographic materials - designation analysis (Documents cartographiques - autres caract\'e9ristiques physiques )\par
124? | I1=_ | I2=_ | $a? | $b* | $c* | $d* | $e* | $f* | $g* // Opt/Uni ( $a:Man/Uni; others:Opt/Rep )\par
\par
// Coded data field : sound recording and printed music ( Enregistrements sonores parl\'e9s et musique imprim\'e9e )\par
125? | I1=_ | I2=_ | $a? \lang1035 | $b?\tab // Opt/Uni ( $a,b:Opt/Uni )\par
\par
\lang1033 // Coded data field : sound recording - physical attributes (Enregistrements sonores - caract\'e9ristiques physiques )\par
126? | I1=_ | I2=_ | $a* | $b?\tab // Opt/Uni ( $a:Opt/Rep; b:Opt/Uni )\par
\par
// Coded data field : duration of sound recordings and printed music\tab ( Dur\'e9e des enregistrements sonores et partitions musicales imprim\'e9es )\par
127? | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Uni ( $a:Opt/Rep )\par
\par
// Coded data field : musical performances and scores ( Interpr\'e9tations musicales et partitions )\par
128* | I1=_ | I2=_ | $a* | $b* | $c*\tab // Opt/Rep ( $a,b,c:Opt/Rep )\par
\par
// Coded data field : Microforms - physical attributes ( Microforme - caract\'e9ristiques physiques )\par
130* | I1=_ | I2=_ | $a?\tab\tab\tab\tab // Opt/Rep ( $a:Opt/Rep )\par
\par
// Coded data field : cartographic materials-grid and vert. measurement\tab ( Documents cartographiques - mesures g\'e9od\'e9siques, quadrillage et mesures vert. )\par
131? | I1=_ | I2=_ | $a* | $b* | $c* | $d* | $e* | $f* | $g* | $h* | $i* | $j* | $k* | $l*\par
\par
// Coded data field : computer files ( Fichiers informatiques )\par
135* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Title and statement of responsibility ( Titre et mention de responsabilite )\par
200_ | I1=01 | I2=_ | $a+ | $b* | $c* | $d* | $e* | $f* | $g* | $h* |$i* | $z* | $v*\par
\par
// Edition statement ( Edition )\par
205* | I1=_ | I2=_ | $a? | $b* | $f* | $g* | $d*  // Opt/Rep ( $a:Opt/Uni; others:Opt/Rep )\par
\par
// Cartographic materials - mathematical data ( Documents cartographiques - donn\'e9es math\'e9matiques )\par
206* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Serials numbering \tab\tab ( Publication en s\'e9rie : num\'e9rotation )\par
207? | I1=_ | I2=01 | $a* | $z*\tab  // Opt/Uni ( $a,z:Opt/Rep )\par
\par
// Printed music specific statement ( Musique imprimm\'e9e )\par
208? | I1=_ | I2=_ | $a? \lang1035 | $d*\tab // Opt/Uni ( $a:Opt/Uni; $d:Opt/Rep )\par
\par
\lang1033 // Publication, distribution, etc... ( Adresse bibliographique )\par
210? | I1=_ | I2=_ | $a* | $b* | $c* | $d* | $e* | $f* | $g* | $h*\tab // Opt/Uni ( others:Opt/Rep )\par
\par
// Projected publication date ( Date de publication prevue )\par
211? | I1=_ | I2=_ | $a?\tab\tab\lang1035 // Opt/Uni ( $a:Opt/Uni )\par
\par
\lang1033 // Physical description ( Collation )\par
215* | I1=_ | I2=_ | $a* | $c? | $d* | $e* \tab // Opt/Rep ( $c:Opt/Uni; others:Opt/Rep )\par
\par
// Series ( Collection )\par
225* | I1=012 | I2=_ | $a? | $e* | $f* | $x* | $v* | $h* | $i* | $z* | $d*  \tab // Opt/Rep ( $a:Opt/Uni; others:Opt/Rep )\par
\par
// General notes ( Notes generales )\par
300* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to identification number ( Notes sur les numeros d'identification )\par
301* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to coded information ( Notes sur les informations codees )\par
302* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// General notes pertaining to descriptive information ( Notes generales sur la description bibliographique )\par
303* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to title and statement of responsability ( Notes sur le titre et la mention de responsabilite )\par
304* | I1=_ | I2=_ | $a? \tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to edition and bibliographic history ( Notes sur l'edition et l'histoire bibliographique )\par
305* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to publication, distribution, etc... ( Notes sur l'adresse bibliographique )\par
306* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to physical description ( Notes sur la collation )\par
307* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to series\tab\tab ( Notes sur la collection )\par
308* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to binding and availability ( Notes sur la reliure et la disponibilite )\par
310* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to linking fields ( Notes sur les zones de liens )\par
311* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to related titles ( Notes sur les titres associes )\par
312* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to subject access ( Notes sur les vedettes matieres )\par
313* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to intellectual responsibility ( Notes sur la mention de responsabilite intellectuelle )\par
314* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Notes pertaining to material - specific information ( Notes sur les informations propres au document )\par
315* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Internal bibliographies / indexes notes ( Notes sur les bibliographies ou index )\par
320* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// External indexes / abstract / references notes ( Notes sur les index, citations et analyse publies separement )\par
321* | I1=_01 | I2=_ | $a? | $b? | $x?\tab // Opt/Rep ( Others:Opt/Uni )\par
\par
// Credits notes ( Notes sur le generique )\par
322? | I1=_ | I2=_ | $a?\tab\tab\tab\lang1035 // Opt/Uni ( $a:Opt/Uni )\par
\par
\lang1033 // Cast notes ( Notes sur les interpretes )\par
323* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Facsimile note ( Note de fac-simile )\par
324? | I1=_ | I2=_ | $a?\tab\tab\tab\lang1035 // Opt/Uni ( $a:Opt/Uni )\par
\par
\lang1033 // Frequency statement note ( Note sur la periodicite )\par
326* | I1=_ | I2=_ | $a? | $b? \tab\tab // Opt/Rep ( Others:Opt/Uni )\par
\par
// Contents note ( Note de contenu )\par
327? | I1=01 | I2=_ | $a*\tab\tab\tab // Opt/Uni ( $a:Opt/Rep )\par
\par
// Dissertation note ( Note de these )\par
328* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Summary or abstract ( Resumes ou analyses )\par
330* | I1=_ | I2=_ | $a? \tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Preferred citation of described materials ( Notes sur le titre choisi pour le document )\par
332* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Users / intended audience notes ( Notes sur le public )\par
333* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Type of computer file ( Notes sur le type de fichier informatique )\par
336* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Technical details notes ( Notes sur les details techniques )\par
337* | I1=_ | I2=_ | $a?\tab\tab\tab // Opt/Rep ( $a:Opt/Uni )\par
\par
// Acquisition information notes ( Renseignements sur l'acquisition )\par
345? | I1=_ | I2=_ | $a* | $b* | $c* | $d* // Opt/Uni ( Other:Opt/Rep )\par
\par
// Series ( Lien a une notice de collection )\par
410* | I1=_ | I2=01 | $1+ | $a* | $d* | $e* | $f* | $g* | $h* | $i* | $v* | $w* \tab\tab\tab\tab\tab\tab\tab // Man/Rep ( Others:Opt/Rep)\par
\par
// Subseries ( Sous-collection )\par
411* | I1=_ | I2=01 | $3? | $t? | $x? | $v? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Supplement ( A pour supplement ... )\par
421* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Parent of supplement ( Supplement de ... )\par
422* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Issued with ( Publie avec ... )\par
423* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Continues ( Suite de ... )\par
430* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Continues in part ( Succede apres scission a ... )\par
431* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Supercedes ( Remplace ... )\par
432* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Supercedes in part ( Remplace partiellement ... )\par
433* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Absorbed ( Absorbe ... )\par
434* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Absorbed in part ( Absorbe partiellement ... )\par
435* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Formed by merge of... ( Fusion de ... )\par
436* | I1=_ | I2=01| $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Continued by ( Devient ... )\par
440* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Continued in part by ( Devient partiellement ... )\par
441* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Superseded by ( Remplace par ... )\par
442* | I1=_ | I2=01| $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Superseded in part by ( Remplace partiellement par ... )\par
443* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Absorbed by ( Absorbe par ... )\par
444* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Absorbed in part by ( Absorbe partiellement par ... )\par
445* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
\lang1035 // Split into ... ( Scinde en ... et en ... )\par
\lang1033 446* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Merged with ... ( Fusionne avec ... pour donner ... )\par
447* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Changed back to... ( Redevient )\par
448* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Other edition in the same medium ( Autre edition sur le meme support )\par
451* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Other edition in another medium ( Autre edition sur un autre support )\par
452* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Translated as ... ( Traduit sous le titre )\par
453* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Translation of ... ( Traduit de ... )\par
454* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Set ( Lien a une notice generale )\par
461* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Subset ( Niveau du sous-ensemble )\par
462* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Piece ( Niveau de l'unite materielle )\par
463* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
\lang1031 // Piece-analytic ( Niveau du depouillement )\par
\lang1033 464* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Other related work ( Autres eouvres en liaison )\par
488* | I1=_ | I2=01 | $3? | $t? | $x? | $y? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Uniform title ( Titre uniforme )\par
500* | I1=01 | I2=01 | $a? | $b* | $h* | $i* | $k? | $l? | $m? | $n* | $q? | $r* | $s* | $u? | $v? | $w? | $x* | $y* | $z* | $2? | $3?\par
\par
// Collective uniform title ( Rubrique de classement )\par
501* | I1=012 | I2=_ | $a? \lang1031 | $b* | $e? | $k? \lang1033 | $m? | $r* | $s* | $u? | $w? | $x* | $y* | $z* | $2? | $3?\par
\par
// Uniform conventional heading ( Titre de forme )\par
503* | I1=01 | I2=_ | $a? | $b? | $j? | $d? \lang1031 | $e? | $f? | $h? | $m? | $n? | $k? \lang1033 | $l? | $i?\par
\par
// Parallel title proper ( Titre parallele )\par
510* | I1=01 | I2=_ | $a? | $e* | $h* | $i* | $j? | $n? | $z?\tab // Opt/Rep ( $a,j,n,z:Opt/Uni; Others:Opt/Rep )\par
\par
// Cover title ( Titre de couverture )\par
512* | I1=01 | I2=_ | $a? | $e*  // Opt/Rep ( $a:Opt/Uni; others:Opt/Rep )\par
\par
// Added title _ Page title ( Titre figurant sur une autre page de titre )\par
513* | I1=01 | I2=_ | $a? | $e* | $h? | $i? // Opt/Rep ( $e:Opt/rep; Others:Opt/Uni )\par
\par
// Caption title ( Titre de depart )\par
514* | I1=01 | I2=_ | $a? | $e* // Opt/Rep ( $e:Opt/Rep; Others:Opt/Uni )\par
\par
// Running title ( Titre courant )\par
515* | I1=01 | I2=_ | $a?\tab\tab // Opt/Rep ( Others:Opt/Uni )\par
\par
// Spine title ( Titre de dos )\par
516* | I1=01 | I2= | $a? | $e* // Opt/Rep ( $e:Opt/Rep; Others:Opt/Uni )\par
\par
// Other variant titles ( Autres variantes du titre )\par
517* | I1=01 | I2=_ | $a? | $e* // Opt/Rep ( $e:Opt/Rep; Others:Opt/Uni )\par
\par
// Former title ( Titre precedent )\par
520* | I1=01 | I2=_ | $a? | $e* | $h? | $i? // Opt/Rep ( $e:Opt/Rep; Others:Opt/Uni )\par
\par
// Key title ( Titre cle )\par
530* | I1=01 | I2=_ | $a? | $b? | $j? // Opt/Rep ( Others:Opt/Uni )\par
\par
// Abbreviated title ( Titre abrege )\par
531* | I1=_ | I2=_ | $a? | $b? \tab // Opt/Rep ( Others:Opt/Uni )\par
\par
// Expanded title ( Titre developpe )\par
532* | I1=01 | I2=0123 | $a? | $z? \tab // Opt/Rep ( Others:Opt/Uni )\par
\par
// Additional title supplied by cataloguer ( Titre ajoute par le catalogueur )\par
540* | I1=01 | I2=_ | $a?\tab\tab\tab // Opt/Rep ( Others:Opt/Uni )\par
\par
// Translated title supplied by cataloguer ( Titre traduit ajoute par le catalogueur )\par
541* | I1=01 | I2=_ | $a? \lang1031 | $e? | $h? | $i? | $z? \tab\lang1033 // Opt/Rep ( Others:Opt/Uni )\par
\par
// Personal name used as subject ( Vedette matiere nom de personne )\par
600* | I1=_ | I2=01 | $a_ | $b? \lang1031 | $c* | $f? | $t? | $3? | $x* | $y* | $z* | $2?\par
\par
\lang1033 // Corporate body name used as subject ( Vedette matiere collectivite )\par
601* | I1=01\tab | I2=012\tab | $a_ | $b* | $c* | $f? \lang1031 | $g? | $d? | $e? | $l? | $h? | $t? | $3? | $x* | $y? | $z? | $2?\par
\par
// Vedette matiere nom de famille\par
\lang1033 602* | I1=_ | I2=_ | $a? | $f? | $t? | $3? | $x* | $y* | $z* | $2?\par
\par
\lang1031 // Auteur-titre-vedette matiere\par
\lang1033 604* | I1=_ | I2=_ | $3? | $t? \lang1031 | $x? | $v?\par
\par
// Vedette matiere titre\par
\lang1033 605* | I1=_ | I2=_ | $a? | $h* | $i* | $l? | $m? | $n* | $q? | $x* | $2? | $3? | $y* | $z*\par
\par
// Vedette matiere nom commun\par
606* | I1=_ | I2=_ | $a? | $3? | $x* | $y* | $z* | $2?\par
\par
// Vedette matiere geographique\par
607* | I1=_ | I2=_ | $a? | $x* | $y* | $z* | $2? | $3?\par
\par
// Indexation en vocabulaire libre\par
610* | I1=012_ | I2=_ | $a*\par
\par
// Acces par le lieu d'edition\par
620* | I1=_ | I2=_ | $a? | $b? | $c? | $d?\par
\par
// Acces par donnees techniques\par
626* | I1=_ | I2=_ | $a? \lang1031 | $b? | $c?\par
\par
// Code de zone geographique\par
\lang1033 660* | I1=_ | I2=_ | $a?\par
\par
// Code de date\par
661* | I1=_ | I2=_ | $a?\par
\par
// Precis\par
670* | I1=_ | I2=_ | $b? \lang1031 | $c? | $e* | $z?\par
\par
\lang1033 // Indice CDU\par
675* | I1=_ | I2=_ | $a? | $v? | $z?\par
\par
// Indice DEWEY\par
676* | I1=_ | I2=_ | $a? | $v? | $z?\par
\par
// Classification de la bibliotheque du congres\par
680* | I1=_ | I2=_ | $a? | $b?\par
\par
// Autres classifications\par
686* | I1=_ | I2=_ | $a* | $b* | $c* | $d?\par
\par
\lang1031 // Premier auteur personne physique\par
\lang1033 700? | I1=_ | I2=01 | $a_ | $b? | $c* | $d? | $f? | $g? | $3? | $4*\par
\par
// Co-auteur personne physique\par
701* | I1=_ | I2=01 | $a_ | $b? | $c* | $d? | $f? | $g? | $3? | $4*\par
\par
// Auteur secondaire personne physique\par
702* | I1=_ | I2=01 | $a_ | $b? | $c* | $d? | $f? | $g? | $3? | $4*\par
\par
// Premier auteur collectivite\par
710? | I1=01 | I2=012 | $a_ | $b* | $c* | $g? \lang1031 | $d* | $e? | $f? \lang1033 | $h* | $3? | $4*\par
\par
// Collectivite co-auteur\par
711* | I1=01 | I2=012 | $a_ | $b* | $c* | $g? \lang1031 | $d* | $e? | $f? \lang1033 | $h* | $3? | $4*\par
\par
// Collectivite auteur secondaire\par
712* | I1=01 | I2=012 | $a_ | $b* | $c* | $g? \lang1031 | $d* | $e? | $f? | $h* | $3? | $4*\par
\par
// Premier auteur nom de famille\par
\lang1033 720? | I1=_ | I2=_ | $a? | $f? | $3? | $4*\par
\par
// Nom de famille co-auteur\par
721* | I1=_ | I2=_ | $a? | $f? | $3? | $4*\par
\par
// Nom de famille auteur secondaire\par
722* | I1=_ | I2=_ | $a? | $f? | $3? | $4*\par
\par
// Source de la notice\par
801* | I1=_ | I2=0123 | $a? | $b? | $c? | $g*\par
\par
// Centre ISDS\par
802* | I1=_ | I2=_ | $a?\par
\par
\lang1031 // Forme rejetee des zones 700, 701, 702 et 720, 721, 722\par
\lang1033 900* | I1=* | I2=* | $**\par
\par
// Forme rejetee des zones 710, 711, 712\par
910* | I1=* | I2=* | $**\par
\par
// Forme rejetee des zones 500\par
950* | I1=* | I2=* | $**\par
\par
// Forme rejetee des zones 600, 601, 602, 605, 606, 607\par
960* | I1=* | I2=* | $**\par
\pard\s1\sb240\cf1\lang2057\b\caps\f2\fs28\page\page Appendix 5\par
\pard\cf0\lang1033\b0\caps0\f1\fs24\par
\pard\s2\sb120\lang2057\b\f2\fs28 UNIMARC to UKMARC Conversion Character Set Translation Tables\par
\pard\lang1033\b0\f1\fs24\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 iso5426\par
iso5889\par
\par
#include "standard.trs"\par
\par
0x88 | 0x88          // NSB\par
0x89 | 0x89          // NSE\par
\par
0xA1 | 0x7B   // Inverse Exclaimation mark\par
0xA2 |             // Left Low Double Quotation\par
0xA3 | 0xB9   // Pound Sign\par
0xA4 | 0x24   // Dollar Sign\par
\lang1031 0xA5 |             // Yen Sign\par
0xA6 | 0x5E   // Single Dagger\par
0xA7 |             // Paragraph\par
\lang1033 0xA8 |             // Prime\par
0xA9 | 0x27   // Left High Single Quotation\par
0xAA | 0x22   // Left High Double Quotation\par
0xAB |             // Left Angle Quotation\par
0xAC | 0xA9   // Musical flat\par
0xAD |             // Copyright Sign\par
0xAE |             // Sound Recording Copyright\par
0xAF |             // Trademark Sign\par
0xB0 |              // Ayn\par
0xB1 | 0xAE   // Alif/Hamzah\par
0xB2 |             // Left Low Single Quotation\par
0xB6 |             // Double Dagger\par
0xB7 | 0xA8   // Middle Dot\par
0xB8 | 0x22    // Double Prime\par
0xB9 | 0x27    // Right High Single Quotation mark\par
0xBA | 0x22   // Right High Double Quotation mark\par
0xBB |            // Right Angle Quotation\par
0xBC | 0x60   // Musical Sharp\par
0xBD | 0xA7   // Mjagkij Znak\par
0xBE | 0xB7   // Tverdyj Znak\par
0xBF | 0x7C   // Inverted Questionmark\par
0xC0 |             // Low Rising Tone mark\par
0xC1 | 0xE1   // Grave Accent\par
0xC2 | 0xE2   // Acute Accent\par
0xC3 | 0xE3   // Circumflex\par
0xC4 | 0xE4   // Tilde\par
0xC5 | 0xE5   // Macron\par
0xC6 | 0xE6   // Breve\par
0xC7 | 0xE7   // Dot Above\par
\lang1031 0xC8 |            // Trema\par
0xC9 | 0xE8   // Umlaut\par
\lang1033 0xCA | 0xEA   // Circle Above\par
0xCB | 0xED   // High Comma off centre\par
0xCC |             // Inverted High Comma centred  \par
0xCD | 0xEE   // Double Acute Accent              \par
0xCE |             // Horn                            \par
0xCF | 0xE9   // Caron (Hacek)                   \par
0xD0 | 0xF0   // Cedilla\par
0xD1 | 0xF8   // Rude\par
0xD2 | 0xF7   // Hook to left\par
0xD3 | 0xF1   // Hook to right\par
0xD4 | 0xF4   // Circle Below\par
0xD5 |             // Half Circle Below\par
0xD6 | 0xF2   // Dot Below\par
0xD7 | 0xF3   // Double Dot Below\par
0xD8 | 0xF6   // Underline\par
0xD9 | 0xF5   // Double Underline\par
0xDA |            // Small Low Vertical Bar\par
0xDB |            // Circumflex below\par
0xDC |               \par
0xDD | 0xEB   // Left half of Ligature sign and Double Tilde\par
0xDE | 0xEC   // Right half of Ligature sign\par
0xDF |\tab\tab // Right half of Double Tilde\par
0xE1 | 0xA5\tab // AE\par
0xE2 | 0xA3   // D with bar\par
0xE6 | 0x49 6A   // IJ\par
0xE8 | 0xA1   // L with bar\par
0xE9 | 0xA2   // O with bar\par
0xEA | 0xA6   // OE (Capital Dipthong)\par
0xEC | 0xA4   // THORN\par
0xF1 | 0xB5    // ae (Small Dipthong)\par
0xF2 | 0xB3   // d  with bar\par
0xF3 | 0xBA   // eth\par
0xF5 | 0xB8   // i without dot\par
0xF6 | 0x69 6A   // ij\par
0xF8 | 0xB1   // l with bar\par
0xF9 | 0xB2   // o with solidus\par
0xFA | 0xB6   // oe (small dipthong)\par
0xFB |           // Sharp s\par
0xFC | 0xB4   // Thorn\par
\pard\f1\fs24\par
\par
\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 Table des caracteres standards\par
ISO-646\par
\par
0x1f | 0x1f  // $ marc\par
0x20 | 0x20  // Espace\par
. | .\par
! | !\par
" | "\par
# | #\par
% | %\par
& | &\par
' | '\par
( | (\par
) | )\par
* | *\par
+ | +\par
, | ,\par
- | -\par
0x2F | 0x2F // la barre de division\par
: | :\par
; | ;\par
< | <\par
> | >\par
= | =\par
? | ?\par
@ | @\par
[ | [\par
\\ | \\\par
] | ]\par
^ | ^\par
\{ | \{\par
\} | \}\par
0x7C | 0x7C // la barre verticale\par
a | a\par
b | b\par
c | c\par
d | d\par
\lang1031 e | e\par
f | f\par
\lang1033 g | g\par
h | h\par
i | i\par
j | j\par
k | k\par
l | l\par
m | m\par
n | n\par
o | o\par
p | p\par
q | q\par
r | r\par
s | s\par
t | t\par
u | u\par
v | v\par
w | w\par
x | x\par
y | y\par
z | z\par
A | A\par
B | B\par
C | C\par
D | D\par
\lang1031 E | E\par
F | F\par
\lang1033 G | G\par
H | H\par
I | I\par
J | J\par
K | K\par
L | L\par
M | M\par
N | N\par
O | O\par
P | P\par
Q | Q\par
R | R\par
S | S\par
T | T\par
U | U\par
V | V\par
W | W\par
X | X\par
Y | Y\par
\lang1031 Z | Z\par
0x31 | 0x31\par
0x32 | 0x32\par
0x33 | 0x33\par
0x34 | 0x34\par
0x35 | 0x35\par
0x36 | 0x36\par
0x37 | 0x37\par
0x38 | 0x38\par
0x39 | 0x39\par
\lang1033 0x30 | 0x30\par
\pard\f1\fs24\par
\pard\s1\sb240\cf1\lang2057\b\caps\f2\fs28\page Appendix 6\par
\pard\cf0\lang1033\b0\caps0\f1\fs24\par
\pard\s2\sb120\lang2057\b\f2\fs28 UNIMARC to UKMARC Conversion Configuration Files\par
\pard\lang1033\b0\f1\fs24\par
\par
UK.CNF file\par
\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 001\par
002\par
005\par
008\par
\pard\f1\fs24\par
\par
UNI.CNF\par
\par
\pard\brdrl\brdrs\brdrw15\brsp20 \brdrt\brdrs\brdrw15\brsp20 \brdrr\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \f4\fs20 001\par
002\par
005\par
008\par
}
 